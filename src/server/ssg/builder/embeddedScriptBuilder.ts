import FileUtil from "../../util/fileUtil";
import dotenv from "dotenv";
dotenv.config();

export default class EmbeddedScriptBuilder
{
    async build(sourceDir?: string, targetDir?: string): Promise<void>
    {
        if (sourceDir == undefined)
            sourceDir = `${process.env.SRC_ROOT_DIR}/shared`;
        if (targetDir == undefined)
            targetDir = `${process.env.VIEWS_ROOT_DIR}/partial/embeddedScript`;

        let relativeFilePaths = await FileUtil.getAllRelativePathsInDirRecursively(sourceDir);
        relativeFilePaths = relativeFilePaths.filter(x => x.endsWith(".js"));

        for (const relativeFilePath of relativeFilePaths)
        {
            const sourceCode = (await FileUtil.read(relativeFilePath, sourceDir))
                .split("\n")
                .filter(line => !line.startsWith("export ")) // Remove 'export' statements.
                .join("\n").trim();

            await FileUtil.write(relativeFilePath.replace(".js", ".ejs"), `
<%_ if (!locals.globalDictionary["script_included_(${relativeFilePath})"]) { _%>
<!-- NOTE: This EJS partial is auto-generated by 'embeddedScriptBuilder.ts' -->
<%_ locals.globalDictionary["script_included_(${relativeFilePath})"] = true; _%>
<script>
${sourceCode}
</script>
<%_ } _%>
`.trim(), targetDir);
        }
    }
}