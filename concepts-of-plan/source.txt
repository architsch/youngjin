:d: A collection of thoughts on the topic of software product design, as well as its potential methodologies.
:k:Software Product, Product Design, Software Design, Life Simulator, Tamagotchi, Electronic Gadget, Software Toy, Automata, User Experience, UI, UX, EduTech, Entertainment, Indie Development
:l:2025-02-15

[Designing a Software Product] January 21, 2025 - February 15, 2025

This is a collection of my personal thoughts in regard to how a software product can be designed.

@@<hr>
@@<div class="l_spacer"></div>
<001>
@@<h3><b>1. Where to Begin</b></h3>

Imagine that you are trying to design a software product. Depending on your field of interest, it could be a game, a social networking service, a chatbot, an educational platform, or something else.

No matter what type of product you have in mind, however, we can all agree that it ought to be something meaningful. And by "meaningful", I mean a set of qualitative measures which transcend a mere assortment of dry, mechanistic details.

When designing a software, it is necessary to resolve a gap between the product's end goal and its implementation details. We can surmount this difficulty via quantitative reasoning.

For example, suppose that we are trying to create a pet simulator (similar to Tamagotchi). What shall we do to fulfill such an objective?

First, we need to devise a list of meaningful pet-related experiences. In addition, we need to figure out how to translate them into computational procedures (because they must be part of a computer program).

We can achieve this by defining our pet simulator not in terms of vague emotional descriptions, but in terms of numerical quantities.

@@<hr>
@@<div class="l_spacer"></div>
<002>
@@<h3><b>2. Quantification of Meaning</b></h3>

The question is, what kinds of numerical quantities do we want in our pet simulator?

This is where the problem of ambiguity arises. Overcoming this initial barrier is crucial for the sake of designing something meaningful.

To kick-start the design process, let me come up with a couple of ideas. The very first thing which crosses my mind is that the pet needs food to survive.

Whenever the pet eats something, its energy level increases. If it doesn't eat anything, its energy level will gradually drop.

What comes next? Let me guess. Note that food is not the only biological need. For example, the pet also needs to be caressed to feel that it is being loved.

For prototyping purposes, then, it will be sensible to add a pair of buttons to let us interact with the pet - one for feeding, and the other one for caressing. Clicking the former will increase the energy level, while clicking the latter will increase the affection level.

Here, we can see an example of a dilemma between two choices. While we are feeding the pet, it cannot be caressed. And while we are caressing the pet, it cannot be fed.

@@<hr>
@@<div class="l_spacer"></div>
<003>
@@<h3><b>3. The Geometry of Variables</b></h3>

The design of a virtual pet, then, can be summarized as the following two steps:

(1) Create a set of variables, each of which represents a unique aspect of the pet's state.
(2) Create a set of actions, which either increment or decrement these variables when invoked.

The act of feeding, for instance, may greatly amplify the pet's energy level but slightly reduce its affection level. The act of caressing, on the other hand, may greatly amplify the pet's affection level but slightly reduce its energy level.

And if we spend time without doing anything, both the pet's energy and affection levels can be expected to decay as time passes by.

The dynamics of pet simulation can be easily visualized. For example, we can treat the pet's current state as a particle on a 2D plane, whose axes denote the pet's energy and affection levels, respectively.

Each action, then, will be interpreted as a force which pushes the particle in a specific direction.

@@<hr>
@@<div class="l_spacer"></div>
<004>
@@<h3><b>4. Multiple Agents</b></h3>

So, it looks like introducing a few variables and means of manipulating them will let us create a simple pet simulator.

This solution, however, is restrictive in the sense that it does not scale. If we are to stick solely to the idea of raising a single pet, the horizon of our experience will forever be constrained to that of a cheap electronic toy, such as Tamagotchi.

There is a way to overcome such a barrier, though. All we have to do is provide the user with multiple pets instead of just one. This will open up a door to a richer spectrum of choices, without necessitating us to invent anything new.

From a game design point of view, such a means of scaling introduces the notion of progression. By adding more and more pets to the inventory, the user is now able to participate in a mission towards continual improvement.

This is an indispensable feature to have, as it is necessary to ensure that the user won't run out of goals to pursue.

@@<hr>
@@<div class="l_spacer"></div>
<005>
@@<h3><b>5. Relations</b></h3>

Previously, we saw that letting the user own multiple pets (instead of just one) neatly solves the scaling issue.

If pets are unable to interact with each other, however, the overall experience will be too flat and boring.

One way to solve this is to invent a variable which describes not just a single pet, but a relationship between two pets.

For example, we may come up with a new variable which represents the degree of jealousy that a pet feels towards another pet. We will then be able to declare a rule such as: "Pet A becomes more jealous towards pet B whenever the user caresses B in front of A".

The main benefit of this is that it introduces a wide variety of dynamic behaviors to the system. Too much jealousy, for instance, may trigger a pet to start a fight with another pet, resulting in mutual damage.

Such a conflict of interests serves as an important factor in the design of subtle narratives. It urges the user to make choices carefully, since each choice may incur a catastrophic side effect.

@@<hr>
@@<div class="l_spacer"></div>
<006>
@@<h3><b>6. Partitioning</b></h3>

We may imagine a pet simulator as a network of pets and their relationships.

If every pet is capable of interacting with every other pet at any given moment, however, the whole system will plunge into chaos.

The most effective solution to this is to partition our simulation space into rooms that are separate from each other, meaning that pets in one room won't be able to interact with those in another room.

Such a mechanic allows us to create local environments, each of which is imbued with its own personality. It also provides the user with an extra dimension of self inquiry, such as: "Should I put these two pets in the same room? They might fight with each other."

Another advantage is that it makes things more digestible. By splitting a large herd of pets into isolated groups, the user is now only required to pay attention to a handful of them at a time, rather than having to monitor the entire community of pets like an omniscient deity.

@@<hr>
@@<div class="l_spacer"></div>
<007>
@@<h3><b>7. Modes of Interaction</b></h3>

The richness of user experience can be further amplified by splitting it into multiple channels.

In our pet simulator, for example, the user might be allowed to not only take care of one's pets, but also send them to schools, consult a vet, visit a local pet shop, and so on. Since these activities differ from each other significantly, we may assume that they belong to separate classes.

The overall structure of the UI, then, could be depicted as a list of global menu options. Each of them, when clicked, will bring the user to a distinct local space, equipped with its own category of user interactions.

The exact layout of this sort of UI may vary, of course, depending on what kind of product it is intending to convey.

What is noteworthy, though, is the fact that it prevents confusion by neatly segmenting the system into specialized modules, each of which focuses on its own topic and nothing else.








:d: A collection of memes that are formatted in a rather technical manner.
:k:Memes, Visual Language, Diagram, Schematic, Math, Graph, Visualization, Graphical Language, Systems Engineering, Industrial Engineering, Engineering Math
:l:2025-02-14

[Technical Memes] February 2, 2025 - February 14, 2025

@@<hr>
@@<div class="l_spacer"></div>
@@<h3><b>Four Quadrants of Sleep</b></h3>

<t01>

@@<hr>
@@<div class="l_spacer"></div>
@@<h3><b>Caffeine Crafting Rules</b></h3>

<t02>

@@<hr>
@@<div class="l_spacer"></div>
@@<h3><b>English Breakfast</b></h3>

<t03>









:d: A collection of memes that are formatted in a rather technical manner.
:k:Archetypes, Jung, Analytical Psychology, Psychoanalysis, Collective Unconscious, Subconscious, Symbolism, Semantics, Game Design, Game Development, Game Narratives, Mandala, Semiotics
:l:2025-02-13

[Archetypes of Play] February 7, 2025 - February 13, 2025

The following symbolic elements are some of the most popular archetypes of play, frequently recurring in various forms of entertainment such as video games, tabletop games, films, literature, and others.

@@<hr>
@@<div class="l_spacer"></div>
<a01>
@@<h3><b>1. Doll</b></h3>

A doll is a special object. It is inanimate from a functional point of view, yet it is nevertheless endowed with the appearances of an animate being. In a way, therefore, a doll plays the role of a mediator between the realm of life (spirits) and the realm of death.

A doll is a piece of dead matter which is given its own spirit. The spirit lets the doll come alive as its own quasi-living thing. The act of fabricating a doll and giving it a name (identity), therefore, tears the boundary between the overworld and the underworld, giving birth to a "middle region" in which both the live and dead come together and establish a meaningful symbiosis. This place is an intersection between soul and matter.

Dolls can be found in a variety of forms in today's free market. A consumer good, for instance, is a doll which is imbued with the brand's spirit. Some people choose to buy goods of a specific brand because they assign metaphysical meanings to it, other than the pragmatic implication of the product's mere material composition.

Shopping, therefore, could be imagined as a process of furnishing one's own inventory of dolls - an intricate collection of enchanted icons, ready to connect the consumer's identity to the edge of reality where the distinction between the real and unreal blurs itself.

(Keywords: #PsychicInterface #Identity #Icon #Idol #Simulacrum #Toy #Plaything)

@@<hr>
@@<div class="l_spacer"></div>
<a02>
@@<h3><b>2. Treasure Box</b></h3>

A treasure box is full of hidden wonders. The moment you open it up, it may present you with either a pleasant surprise (reward) or punishment. It is a box of mystery, and you never know what kind of thing will reveal itself until you decide to open it.

The core mechanic of a treasure box is random reward, driven by the principle of uncertainty. The act of disclosing it brings you either a good luck or bad luck, and such an outcome is determined by pure chance and not by your personal will. It is a game of randomness.

This hypothetical box shows up in different forms across a variety of cases. In the context of mining, it could be a chunk of dirt and stone beyond which precious minerals might be hidden. In the context of fishing, it could be an opaque pond in which you might be able to catch a fish. And in the context of gambling, you could imagine it as a slot machine.

In every one of the aforementioned scenarios, though, the essence of what constitutes a treasure box stays the same. It is basically an "enclosure of a secret" - a nutshell, when cracked open, throws you upon an unexpected line of destiny. And the way to open it usually involves just a simple kind of action, such as digging the ground with a pickaxe, casting a fishing rod, or pulling the lever of a slot machine.

(Keywords: #RandomReward #PleasantSurprise #Uncertainty #Probability #StochasticProcesses #ParallelUniverse)

@@<hr>
@@<div class="l_spacer"></div>
<a03>
@@<h3><b>3. Portal</b></h3>

A portal is a gateway to another world - a special device of magic which lets the user "cross the threshold" to the other side of reality. It is an awkward puncture in the midst of our mundane everyday life. In literature as well as popular media, it serves as a means of scene transition.

An adventure usually begins by entering a portal, which is typically concealed in a long neglected corner of a place. It could be a door, a looking glass, a closet, an elevator, a storm, or any other "hole" in physical dimension which is capable of temporarily splitting the continuum of our living space into two binary regions - "here" (i.e. the world with which we are familiar) and "there" (i.e. the world which is unknown and full of mysteries).

By crossing a portal, one faces a major shift in one's life due to the sudden disappearance of friendly elements from one's environment. The other side of the portal presents the visitor with a whole new spectrum of paradigms, most of which defy the expectations of one's prior knowledge and education.

A portal opens up a door to a whole new space of possibilities and exploration. In a way, therefore, it provides us with inexplicable catharsis - a sense of spiritual liberation from the confines of ordinary life. In the prolonged absence of such a portal, we usually fabricate one by planning a travel, engaging in an unusual outdoor activity, or studying an unfamiliar subject.

(Keywords: #AnotherWorld #LandOfMysteries #Liberation #RoomForExploration #Adventure)