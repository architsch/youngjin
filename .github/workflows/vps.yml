# Simple workflow for deploying the node.js server app to the designated VPS
name: Deploy to VPS

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "vps"
  cancel-in-progress: false

jobs:
  build:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [22.14.0]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - name: Create .env
      run: |
        echo "PORT=${{ secrets.PORT }}" >> ./.env
        echo "ROOT_URL=${{ secrets.ROOT_URL }}" >> ./.env
        echo "STATIC_PAGE_ROOT_DIR=public" >> ./.env
        echo "VIEWS_ROOT_DIR=views" >> ./.env
        echo "SRC_ROOT_DIR=src" >> ./.env
        echo "GLOBAL_LAST_MOD=2023-09-10" >> ./.env
        echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> ./.env
        echo "EMAIL_SENDER_PASS=${{ secrets.EMAIL_SENDER_PASS }}" >> ./.env
        echo "SQL_HOST_PROD=${{ secrets.SQL_HOST_PROD }}" >> ./.env
        echo "SQL_USER_PROD=${{ secrets.SQL_USER_PROD }}" >> ./.env
        echo "SQL_PASS_PROD=${{ secrets.SQL_PASS_PROD }}" >> ./.env
    - run: npm run db_init_prod
    - run: pm2 restart admin