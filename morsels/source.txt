:d:Methodology of designing educational narratives.
:k:Katarina Gyllenbäck, Edutainment, Educational Games, Narrative Design, Screen Writer, Script Writer, Branding, Brand Design, Computational Aesthetics, Educational Narrative
:l:2024-07-06

[Game Design Concepts] June 27, 2024 - July 6, 2024

This is a collection of game design concepts.

@@<hr>
@@<div class="l_spacer"></div>
<001>
@@<h3><b>Mechanical Narratives</b></h3>

A game is usually a combination of two factors - mechanics and narratives.

Mechanics represent the systematic aspects of the game, such as physics, AI, crafting rules, progression curves, and others which rely on the knowledge of math/engineering.

Narratives represent the volitional aspects of the game, such as lores, stories, personalities, goals, and others which rely on the knowledge of arts/humanities.

A problem we often experience is that it is too tricky to fit these two together in one place. Many ambiguous cases are prone to arise, such as:

(1) Having a cool story (narrative) for a video game, but not knowing how to turn it into gameplay (mechanic).
(2) Knowing how to implement a clever enemy AI (mechanic), but not knowing how to design an appropriate enemy character for it (narrative).
(3) Having an interesting NPC with a unique personality (narrative), but not knowing which in-game role it ought to play (mechanic).

A solution is to start designing the game with building blocks which can both be considered mechanics and narratives at the same time (aka "mechanical narratives").

If we start by laying out the game's narratives first, it will be difficult to devise mechanics which are compatible with the given narratives. If we start by laying out the game's mechanics first, on the other hand, it will be difficult to devise narratives which are compatible with the given mechanics.

Such a dilemma can be bypassed by simply collecting a number of "mechanical narratives" and assembling them together.

@@<hr>
@@<div class="l_spacer"></div>
<002>
@@<h3><b>Sensors, Filters, and Motors</b></h3>

In general, a gameplay agent can be constructed by assembling 3 types of modules - sensors, filters, and motors.

Sensors collect data from the environment, filters process the data (for analysis), and motors trigger the agent to take actions based upon the filtered data.

Here is an example. Imagine that there is an anti-aircraft gun whose role is to shoot down enemy airplanes in range. We can model this gun as a composition of:

(1) A sensor (i.e. radar) which detects anything within the specified range,
(2) A filter (i.e. computing module) which looks up the database to see if the detected object is an enemy airplane, and
(3) A motor (i.e. the gun itself) which fires bullets at any object which is identified as an enemy airplane.

The gun detects an aircraft, checks to see if it is an enemy, shoots at it if so, and then detects another aircraft, checks to see if it is an enemy, shoots at it if so, and then detects another aircraft... and so on.

This is just a simple example. For more complex behaviors, you may as well equip it with multiple sensors (e.g. radar, camera, antenna), multiple filters (e.g. distance filter, look-angle filter), multiple motors (e.g. gun, horizontal rotor, vertical rotor, ammunition reloader), etc.

Such a multitude of modules can then communicate with one another by means of series connections, parallel connections, or both.

@@<hr>
@@<div class="l_spacer"></div>
<003>
@@<h3><b>Psychological Force Field</b></h3>

Psychological force field is a useful concept in game design.

We typically imagine each individual game character as an observer, equipped with its own independent mind. It continuously scans the environment and makes decisions off of it.

Each observer carries its own psychological force field which permeates the entirety of the game world. Every entity other than the observer itself essentially "warps" the field nearby, modifying the magnitudes and directions of the force vectors which guide the observer's movement.

A repulsive entity adds outward forces to the field, whereas an attractive entity adds inward forces to the field. This makes the observer move away from repulsive entities and closer to attractive entities.

Whether an entity is repulsive or attractive is determined by the observer's personal preference.

The force that is to be applied to the observer can be computed by the function "PsyForce(id, X, Y)", where "id" is the unique ID of the observer and (X, Y) is the observer's current position. This function returns the psychological force vector which gets added to the observer's net force.

A real life example of psychological force field is Feng Shui, where architectural patterns are believed to shape the field in which the residents of the house reside, thereby influencing the way they behave.

@@<hr>
@@<div class="l_spacer"></div>
<004>
@@<h3><b>Parallel-Attention Timeline</b></h3>

A parallel-attention timeline is a pretty useful tool to use in gameplay AI.

It starts from a simple analogy.

When I am stirring a pot of spaghetti while also heating a plate of frozen garlic bread in the oven, you can say that I must be multitasking.

However, it should be noted that I am paying way more attention to the pot of spaghetti than to the oven because the latter basically takes care of itself and only demands occasional supervision.

When designing a game, it is convenient to assume that each game character carries its own schedule in its mind, filled with tasks which start and end at their own designated points in time.

It is sometimes even more desirable, though, to model a schedule not as a one-dimensional queue of tasks, but as a two-dimensional grid in which each column represents a time slot and each row represents what could be referred to as "attention priority".

A character which follows this two-dimensional schedule always runs the task which occupies the highest row (i.e. highest attention priority) among all the tasks which occupy the current time slot.

Whenever an "attention trigger" (i.e. any object which demands attention) tries to register a new task to the schedule, the schedule will either ignore this new task if it happens to collide with an existing one, or proceed to register it if not.

Each task possesses its own intrinsic attention priority (i.e. row) which cannot be modified.

@@<hr>
@@<div class="l_spacer"></div>
<005>
@@<h3><b>Partial Movement Constraints</b></h3>

Both too much freedom and too little freedom are undesirable in gameplay.

Suppose that there are enemy characters whom the player must defeat in order to finish the level.

If the enemies are able to move in any direction, it will be a bit too bland because it reduces the functional significance of the level's peculiar spatial configuration (e.g. If you are being chased by an enemy who can only move horizontally, you can take refuge in a vertical space).

If the enemies are completely immobile, on the other hand, it will be pretty bland as well because it makes gameplay less dynamic.

A nice middle ground which leverages the benefits of both is to confine each enemy's locomotive freedom to a set of simple pathways, as though it is a train following a railway.

This mixed approach has 3 main advantages:

(1) It makes it easy to diversify enemy behaviors and introduce a wide variety of in-game strategies.
(2) Its pathfinding algorithm is easier to implement and way less computationally expensive than, say, the A-Star algorithm.
(3) It prevents extreme gameplay scenarios, such as letting the player be completely surrounded by a truckload of enemies because they always keep chasing the player without a pause. By limiting each enemy's maximum range of movement, we can spread out the distribution of enemies throughout the level and prevent them from concentrating too much in one place.

@@<div class="l_spacer"></div>
@@<hr>
@@<div class="l_spacer"></div>
(To be continued...)






:d:Mathematical models of our own thoughts, feelings, and the sense of curiosity.
:k:Curiosity, Motivation, Motive Force, Curiosity Force, Conceptual Space, Physical Space, Katarina Gyllenbäck, Feature Space, Idealism, Ontology, Epistemology
:l:2024-06-28

[Mathematics of the Mind] June 28, 2024

This is a collection of mathematical concepts designed to express the nature of human mind in a rational manner.

The ideas shown below are inspired by Katarina Gyllenbäck's articles. For more information, visit <a href="https://thingspool.net/read-rec/page-2.html">Here</a>.

@@<hr>
@@<div class="l_spacer"></div>
<006>
@@<h3><b>Physical Space and Conceptual Space</b></h3>

There are two different spaces in our universe - physical space and conceptual space.

Physical space is the space we usually refer to whenever we are employing the word "space". It consists of spatial and temporal axes (e.g. X, Y, Z, and Time), and serves as a frame of reference when it comes to describing physical entities such as rigid bodies.

Conceptual space, on the other hand, is the space of qualitative features. For example, a color is a position in the RGB color space, where the axes (R, G, B) represent the intensity levels of the three primary color components (i.e. Red, Green, Blue). The RGB color space is one of many types of conceptual spaces we can imagine.

Each object has its own position in physical space as well as a position in conceptual space. The former tells us where the object is, and the latter tells us what the object looks like.

@@<hr>
@@<div class="l_spacer"></div>
<007>
@@<h3><b>Particulars and Universals</b></h3>

There are two types of objects - particulars and universals.

A particular is an object which exists at a specific point in space and time. All tangible objects, such as a table we can touch, a sandwich we can eat, a cup we can hold, and countless other "real" things, can be classified as particulars.

A universal is different from a particular in the sense that we cannot directly perceive it, since it exists only in conceptual space and not in physical space. It is a pure idea which resides only in the spiritual realm; it does not belong to anywhere in our material world.

In computer science, a class is a universal. It is purely spiritual because it lives in the static memory, which is fixed and therefore "eternal" in the sense that it spans the entirety of the application's runtime.

An instance of a class, which is dynamically allocated in memory, is a particular. It is a mortal being which gets created at some point in time and gets destroyed at some other point in time. It is never eternal because it does not span the entirety of the application's runtime.

@@<hr>
@@<div class="l_spacer"></div>
<008>
@@<h3><b>Contiguity and Resemblance</b></h3>

Since an object exists in two different spaces (namely, "physical space" and "conceptual space"), a distance between a pair of objects can possess either one of two meanings depending on the type of space in which it is measured.

Physical proximity implies contiguity. When two things are very close to each other in physical space, we say that they are contiguous because looking at one of them lets us look at the other much more easily.

Conceptual proximity implies resemblance. When two things are very close to each other in conceptual space, we say that they resemble each other because thinking of one of them lets us think of the other much more easily.

Proximity can be measured by taking the reciprocal of the distance. Less distance means more proximity, and more distance means less proximity.

@@<div class="l_spacer"></div>
@@<hr>
@@<div class="l_spacer"></div>
(To be continued...)






:d:A mathematical interpretation of David Hume's philosophy.
:k:David Hume, Empiricism, Empirical Philosophy, Metaphysics, Epistemology, Ontology, Discrete Math, Philosophy Of Mind, Computational Psychology
:l:2024-07-02

[Mathematical Interpretation of Hume's Philosophy] July 2, 2024

This is a mathematical interpretation of David Hume's philosophy. It is mostly based upon my personal analysis, so please take it with a grain of salt.

I drew most of my inspirations from his book, "An Enquiry Concerning Human Understanding". For more information, visit <a href="https://thingspool.net/read-rec/page-6.html">Here</a>.

@@<hr>
@@<div class="l_spacer"></div>
<011>
@@<h3><b>Introduction</b></h3>

Hume's empiricist worldview begins with a hierarchy of concepts.

There are two major types of components in his domain of knowledge. One is "perceptions", and the other one is "objects of reason". Perceptions are the atoms of the mind, whereas objects of reason are molecules which can be formed by bonding those atoms together.

A perception is any "thought" we can conceive in our minds. It belongs to either one of the two categories - impressions and ideas.

An impression is a direct stimulus received by our sense organs. Things we directly see, hear, smell, taste, and feel are all impressions.

In contrast, an idea is an afterthought on the impressions we received. For example, what we see is an impression, but the recollection of what we just saw is an idea. Impressions are vivid, while ideas are dim.

Objects of reason can be subdivided into two categories - "relations of ideas" and "matters of fact".

A relation of ideas is a result of pure logic, such as a mathematical theorem which manages to prove itself based upon a set of ideas only, without relying on the presence of external stimuli. A matter of fact, on the other hand, requires a considerable amount of empirical data to validate itself (like the law of gravitation).

@@<hr>
@@<div class="l_spacer"></div>
<012>
@@<h3><b>Impressions and Ideas</b></h3>

Hume's definition of "impressions" and "ideas" provides us with a rudimentary ground of logic, upon which we can formulate a model of how we sense and recall our own thoughts.

Impressions are what we typically refer to as "sensory stimuli". These are the most immediate and piercing kind of perceptions which we feel with the utmost degree of intensity.

Ideas, on the other hand, are byproducts of impressions. They linger in our minds like ghosts, which occasionally touch our feelings but to a much lesser degree. Unlike impressions which are momentary, ideas stay in the person's memory and get recalled on demand.

In a way, therefore, ideas are Lego bricks which can fit one another nicely in our minds, whereas impressions are just raw plastic ingredients which are yet to be molded into such bricks.

@@<hr>
@@<div class="l_spacer"></div>
<013>
@@<h3><b>Generation of Ideas</b></h3>

According to Hume's philosophy, each impression generates its corresponding idea when it enters our domain of cognition.

However, he also mentions that the relation between impressions and their ideas is not necessarily one-to-one. There may as well be cases in which a wide spectrum of ideas manage to emerge from a relatively few impressions.

An impression of "light blue" and an impression of "dark blue", for example, may allow us to imagine an intermediate shade of blue (by mixing the qualities of light blue and dark blue) and remember it as a distinct idea. This lets us picture the full spectrum of blue without having to directly sense every single one of its variants via external stimuli.

@@<div class="l_spacer"></div>
@@<hr>
@@<div class="l_spacer"></div>
(To be continued...)