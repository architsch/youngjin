:d: A collection of thoughts on the topic of software product design, as well as its potential methodologies.
:k:Software Product, Product Design, Software Design, Life Simulator, Tamagotchi, Electronic Gadget, Software Toy, Automata, User Experience, UI, UX, EduTech, Entertainment, Indie Development
:l:2025-02-28

[Designing a Software Product] January 21, 2025 - February 28, 2025

This is a collection of my personal thoughts in regard to how a software product can be designed.

@@<hr>
@@<div class="l_spacer"></div>
<001>
@@<h3><b>1. Where to Begin</b></h3>

Imagine that you are trying to design a software product. Depending on your field of interest, it could be a game, a social networking service, a chatbot, an educational platform, or something else.

No matter what type of product you have in mind, however, we can all agree that it ought to be something meaningful. And by "meaningful", I mean a set of qualitative measures which transcend a mere assortment of dry, mechanistic details.

When designing a software, it is necessary to resolve a gap between the product's end goal and its implementation details. We can surmount this difficulty via quantitative reasoning.

For example, suppose that we are trying to create a pet simulator (similar to Tamagotchi). What shall we do to fulfill such an objective?

First, we need to devise a list of meaningful pet-related experiences. In addition, we need to figure out how to translate them into computational procedures (because they must be part of a computer program).

We can achieve this by defining our pet simulator not in terms of vague emotional descriptions, but in terms of numerical quantities.

@@<hr>
@@<div class="l_spacer"></div>
<002>
@@<h3><b>2. Quantification of Meaning</b></h3>

The question is, what kinds of numerical quantities do we want in our pet simulator?

This is where the problem of ambiguity arises. Overcoming this initial barrier is crucial for the sake of designing something meaningful.

To kick-start the design process, let me come up with a couple of ideas. The very first thing which crosses my mind is that the pet needs food to survive.

Whenever the pet eats something, its energy level increases. If it doesn't eat anything, its energy level will gradually drop.

What comes next? Let me guess. Note that food is not the only biological need. For example, the pet also needs to be caressed to feel that it is being loved.

For prototyping purposes, then, it will be sensible to add a pair of buttons to let us interact with the pet - one for feeding, and the other one for caressing. Clicking the former will increase the energy level, while clicking the latter will increase the affection level.

Here, we can see an example of a dilemma between two choices. While we are feeding the pet, it cannot be caressed. And while we are caressing the pet, it cannot be fed.

@@<hr>
@@<div class="l_spacer"></div>
<003>
@@<h3><b>3. The Geometry of Variables</b></h3>

The design of a virtual pet, then, can be summarized as the following two steps:

(1) Create a set of variables, each of which represents a unique aspect of the pet's state.
(2) Create a set of actions, which either increment or decrement these variables when invoked.

The act of feeding, for instance, may greatly amplify the pet's energy level but slightly reduce its affection level. The act of caressing, on the other hand, may greatly amplify the pet's affection level but slightly reduce its energy level.

And if we spend time without doing anything, both the pet's energy and affection levels can be expected to decay as time passes by.

The dynamics of pet simulation can be easily visualized. For example, we can treat the pet's current state as a particle on a 2D plane, whose axes denote the pet's energy and affection levels, respectively.

Each action, then, will be interpreted as a force which pushes the particle in a specific direction.

@@<hr>
@@<div class="l_spacer"></div>
<004>
@@<h3><b>4. Multiple Agents</b></h3>

So, it looks like introducing a few variables and means of manipulating them will let us create a simple pet simulator.

This solution, however, is restrictive in the sense that it does not scale. If we are to stick solely to the idea of raising a single pet, the horizon of our experience will forever be constrained to that of a cheap electronic toy, such as Tamagotchi.

There is a way to overcome such a barrier, though. All we have to do is provide the user with multiple pets instead of just one. This will open up a door to a richer spectrum of choices, without necessitating us to invent anything new.

From a game design point of view, such a means of scaling introduces the notion of progression. By adding more and more pets to the inventory, the user is now able to participate in a mission towards continual improvement.

This is an indispensable feature to have, as it is necessary to ensure that the user won't run out of goals to pursue.

@@<hr>
@@<div class="l_spacer"></div>
<005>
@@<h3><b>5. Relations</b></h3>

Previously, we saw that letting the user own multiple pets (instead of just one) neatly solves the scaling issue.

If pets are unable to interact with each other, however, the overall experience will be too flat and boring.

One way to solve this is to invent a variable which describes not just a single pet, but a relationship between two pets.

For example, we may come up with a new variable which represents the degree of jealousy that a pet feels towards another pet. We will then be able to declare a rule such as: "Pet A becomes more jealous towards pet B whenever the user caresses B in front of A".

The main benefit of this is that it introduces a wide variety of dynamic behaviors to the system. Too much jealousy, for instance, may trigger a pet to start a fight with another pet, resulting in mutual damage.

Such a conflict of interests serves as an important factor in the design of subtle narratives. It urges the user to make choices carefully, since each choice may incur a catastrophic side effect.

@@<hr>
@@<div class="l_spacer"></div>
<006>
@@<h3><b>6. Partitioning</b></h3>

We may imagine a pet simulator as a network of pets and their relationships.

If every pet is capable of interacting with every other pet at any given moment, however, the whole system will plunge into chaos.

The most effective solution to this is to partition our simulation space into rooms that are separate from each other, meaning that pets in one room won't be able to interact with those in another room.

Such a mechanic allows us to create local environments, each of which is imbued with its own personality. It also provides the user with an extra dimension of self inquiry, such as: "Should I put these two pets in the same room? They might fight with each other."

Another advantage is that it makes things more digestible. By splitting a large herd of pets into isolated groups, the user is now only required to pay attention to a handful of them at a time, rather than having to monitor the entire community of pets like an omniscient deity.

@@<hr>
@@<div class="l_spacer"></div>
<007>
@@<h3><b>7. Modes of Interaction</b></h3>

The richness of user experience can be further amplified by splitting it into multiple channels.

In our pet simulator, for example, the user might be allowed to not only take care of one's pets, but also send them to schools, consult a vet, visit a local pet shop, and so on. Since these activities differ from each other significantly, we may assume that they belong to separate classes.

The overall structure of the UI, then, could be depicted as a list of global menu options. Each of them, when clicked, will bring the user to a distinct local space, equipped with its own category of user interactions.

The exact layout of this sort of UI may vary, of course, depending on what kind of product it is intending to convey.

What is noteworthy, though, is the fact that it prevents confusion by neatly segmenting the system into specialized modules, each of which focuses on its own topic and nothing else.

@@<hr>
@@<div class="l_spacer"></div>
<008>
@@<h3><b>8. UI State VS System State</b></h3>

When we think about a software product as a state machine (as in automata theory), we quickly come to the conclusion that it consists of two distinct types of state - one which is bound to user interaction (aka "UI State"), and the other one which is bound to the system's internal dynamics (aka "System State").

The UI state mirrors the way in which the user is currently interacting with the app's virtual world. The dimensions of the viewport (i.e. camera), the position of the page's scollbar, the current menu selection, and the like, are all parts of the application's UI state. They do not directly influence things that are happening in the world.

The System state, on the other hand, refers to the current state of the world itself. In our pet simulator, for example, the individual pets' positions and energy/affection levels should all be taken as parts of the application's System state because they all contribute to what is happening inside the world.

@@<hr>
@@<div class="l_spacer"></div>
<009>
@@<h3><b>9. State Hierarchy</b></h3>

A software product, regardless of its kind, possesses its own state. An important concept to keep in mind is that the state itself may be broken down to smaller states, each of which can then be broken down to even smaller states, and so on.

Eventually, this sort of breakdown reveals its own hierarchical structure.

Based on this kind of reasoning, we can easily design the entire tree of states from a top-down perspective. All we need to do is first define a few general state objects, and then describe each of them as a collection of more specific state objects, and so forth.

What is interesting is that there are direct one-to-one mappings between states which are equivalent but designed to serve different purposes.

The state of the UI which displays the current hunger level of a virtual pet, for instance, could be bound to reflect the actual hunger level of the pet to which it corresponds. This is an example of "UI binding" - a recurring concept in the domain of reactive programming.








:d: A collection of memes that are formatted in a rather technical manner.
:k:Memes, Visual Language, Diagram, Schematic, Math, Graph, Visualization, Graphical Language, Systems Engineering, Industrial Engineering, Engineering Math
:l:2025-02-14

[Technical Memes] February 2, 2025 - February 14, 2025

@@<hr>
@@<div class="l_spacer"></div>
@@<h3><b>Four Quadrants of Sleep</b></h3>

<t01>

@@<hr>
@@<div class="l_spacer"></div>
@@<h3><b>Caffeine Crafting Rules</b></h3>

<t02>

@@<hr>
@@<div class="l_spacer"></div>
@@<h3><b>English Breakfast</b></h3>

<t03>

@@<hr>
@@<div class="l_spacer"></div>
@@<h3><b>Five Phases of Game Development</b></h3>

<t04>









:d: A collection of memes that are formatted in a rather technical manner.
:k:Archetypes, Jung, Analytical Psychology, Psychoanalysis, Collective Unconscious, Subconscious, Symbolism, Semantics, Game Design, Game Development, Game Narratives, Mandala, Semiotics
:l:2025-02-25

[Archetypes of Play] February 7, 2025 - February 25, 2025

The following symbolic elements are some of the most popular archetypes of play, frequently recurring in various forms of entertainment such as video games, tabletop games, films, literature, and others.

@@<hr>
@@<div class="l_spacer"></div>
<a01>
@@<h3><b>1. Doll</b></h3>

A doll is a special object. It is inanimate from a functional point of view, yet it is nevertheless endowed with the appearances of an animate being. In a way, therefore, a doll plays the role of a mediator between the realm of life (spirits) and the realm of death.

A doll is a piece of dead matter which is given its own spirit. The spirit lets the doll come alive as its own quasi-living thing. The act of fabricating a doll and giving it a name (identity), therefore, tears the boundary between the overworld and the underworld, giving birth to a "middle region" in which both the live and dead come together and establish a meaningful symbiosis. This place is an intersection between soul and matter.

Dolls can be found in a variety of forms in today's free market. A consumer good, for instance, is a doll which is imbued with the brand's spirit. Some people choose to buy goods of a specific brand because they assign metaphysical meanings to it, other than the pragmatic implication of the product's mere material composition.

Shopping, therefore, could be imagined as a process of furnishing one's own inventory of dolls - an intricate collection of enchanted icons, ready to connect the consumer's identity to the edge of reality where the distinction between the real and unreal blurs itself.

(Keywords: #PsychicInterface #Identity #Icon #Idol #Simulacrum #Toy #Plaything)

@@<hr>
@@<div class="l_spacer"></div>
<a02>
@@<h3><b>2. Treasure Box</b></h3>

A treasure box is full of hidden wonders. The moment you open it up, it may present you with either a pleasant surprise (reward) or punishment. It is a box of mystery, and you never know what kind of thing will reveal itself until you decide to open it.

The core mechanic of a treasure box is random reward, driven by the principle of uncertainty. The act of disclosing it brings you either a good luck or bad luck, and such an outcome is determined by pure chance and not by your personal will. It is a game of randomness.

This hypothetical box shows up in different forms across a variety of cases. In the context of mining, it could be a chunk of dirt and stone beyond which precious minerals might be hidden. In the context of fishing, it could be an opaque pond in which you might be able to catch a fish. And in the context of gambling, you could imagine it as a slot machine.

In every one of the aforementioned scenarios, though, the essence of what constitutes a treasure box stays the same. It is basically an "enclosure of a secret" - a nutshell, when cracked open, throws you upon an unexpected line of destiny. And the way to open it usually involves just a simple kind of action, such as digging the ground with a pickaxe, casting a fishing rod, or pulling the lever of a slot machine.

(Keywords: #RandomReward #PleasantSurprise #Uncertainty #Probability #StochasticProcesses #ParallelUniverse)

@@<hr>
@@<div class="l_spacer"></div>
<a03>
@@<h3><b>3. Portal</b></h3>

A portal is a gateway to another world - a special device of magic which lets the user "cross the threshold" to the other side of reality. It is an awkward puncture in the midst of our mundane everyday life. In literature as well as popular media, it serves as a means of scene transition.

An adventure usually begins by entering a portal, which is typically concealed in a long neglected corner of a place. It could be a door, a looking glass, a closet, an elevator, a storm, or any other "hole" in physical dimension which is capable of temporarily splitting the continuum of our living space into two binary regions - "here" (i.e. the world with which we are familiar) and "there" (i.e. the world which is unknown and full of mysteries).

By crossing a portal, one faces a major shift in one's life due to the sudden disappearance of friendly elements from one's environment. The other side of the portal presents the visitor with a whole new spectrum of paradigms, most of which defy the expectations of one's prior knowledge and education.

A portal opens up a door to a whole new space of possibilities and exploration. In a way, therefore, it provides us with inexplicable catharsis - a sense of spiritual liberation from the confines of ordinary life. In the prolonged absence of such a portal, we usually fabricate one by planning a travel, engaging in an unusual outdoor activity, or studying an unfamiliar subject.

(Keywords: #AnotherWorld #LandOfMysteries #Liberation #RoomForExploration #Adventure)

@@<hr>
@@<div class="l_spacer"></div>
<a04>
@@<h3><b>4. Furnace</b></h3>

A furnace is a melting pot of chaotic rigmaroles. It is a crucible governed by primordial fire, which disassembles the well-established structure of its ingredients and concocts their inner organs into a bizarrely morphed form. It is a place of rebirth - a transformation from one state to another.

What would a furnace signify from a functional standpoint? There could be many interpretations, but one thing which is worthy of remark is that it allows multiple elements to come together and fuse into a whole separate entity. Thus, we can imagine that a furnace is a cradle of interactions and their unforeseen consequences.

One of the key takeaways of such synthesis is the very notion of unexpectedness. Familiar elements, when combined, sometimes merge into a surprising result which may either bless or destroy the creator. This queer sort of jumpscare, emerging off of the middle of one's otherwise ordinary experience, introduces a sudden "turn" in our familiar storyline, thereby reshaping the perfectly logic-driven clockwork universe into one which is interleaved with caverns of lurking chaos.

(Keywords: #Crafting #Alchemy #Mixer #Combination #Relations #Interactions)

@@<hr>
@@<div class="l_spacer"></div>
<a05>
@@<h3><b>5. Light</b></h3>

Light is an essential ingredient of visibility. We need it in order to observe our surroundings, gather information, and draw a picture of where we are and what kinds of things wait before us. Its presence ensures the overcoming of darkness - an indispensable precondition of knowledge.

It is our instinct to struggle to learn more and more about the environment in which we live. And the root of such an innate tendency can be traced back to the evolutionary fact that the more we know, the more likely we will manage to survive in this hostile world which is full of hidden dangers.

This also explains why darkness is a common element of horror in literature, as well as other forms of media such as films, games, etc. Fear originates from the unknown, and the lack of one's capacity to explain things that are happening nearby. By covering our eyes with the veil of ignorance, darkness renders us vulnerable against the phantasmagoria of potential threats.

The very moment we turn on a source of light, this chamber of uncertainty dissolves itself into oblivion and lets us surmount the unfounded fear which has been haunting us. Light, therefore, is a symbol of courage, grounded upon the promise that everything is and will stay lit in our field of vision.

(Keywords: #Unveiling #OvercomingOfDarkness #Enlightenment #Knowledge #Discovery)

@@<hr>
@@<div class="l_spacer"></div>
<a06>
@@<h3><b>6. Compass</b></h3>

Everyone longs to discover the ultimate purpose in life. Everyone searches for a direction whenever a mist of uncertainty surrounds them. And whenever such a sentiment is being recognized, a spiritual guidance comes into play and saves the day.

A compass is what we need whenever we are lost in the thin air of motivational void. Being a direction-provider, a compass often symbolizes our hope for a parental figure who will lead us to a sequence of persistent goals as well as means to achieve them.

A compass gives us a sense of purpose - a belief that the peak of the mountain to which it is pointing is somewhere worth reaching. It gives us a reason to stay alive and continually strive to become a better version of ourselves every morning, for the hope of getting closer and closer to our ideal destination. It is what endows even the most trivial of our actions with its own meaning.

It can also be understood that a compass only provides us with a fragmentary view of a more holistic vision, which is represented by a map. A map is an overall outline (i.e. a bigger picture) of a panorama of goals that are waiting to be accomplished and how they should be approached. Since such a map can be too complex to read, however, a compass is often preferred when it comes to helping the user focus on one goal at a time, on a step-by-step basis.

(Keywords: #Purpose #Pathway #Journey #Direction #Goal #Guidance #Mentor)

@@<hr>
@@<div class="l_spacer"></div>
<a07>
@@<h3><b>7. Fountain</b></h3>

A fountain is a source of life. It is the ultimate birthplace where everything comes into existence, by means of its unrestricted supply of water. Through its life-giving agency, a fountain provides the world with seeds of fertility which will eventually grow into a jungle of living matters.

Such a place of initial creation is an indispensable element to have in a narrative universe, which promises to begin its genealogy of events with its own story.

A universe, filled with its own system of meaningful causes and their correspondingly meaningful consequences, must start by telling a story at some point in time. And in order to do that, it needs to have a point of origin - the place where the hero's journey begins, the evil of the world unveils, and the ensemble of earthly matters sprout and fill up the void of space, ready to unfold their secrets before the eyes of the adventurer.

In a static, desert-like environment, we can easily imagine such a place of origin as a fountain. Once we introduce water to dry land, life starts to grow and populate its silent horizons. This is the moment at which dynamism comes into play and transforms the land into a colossal "engine" of the storyline, which henceforth drives the pangs and joys of the drama and the way they relate themselves with one another.

(Keywords: #NewLife #Spawner #Birth #NewPossibilities #Hope #NewLight)