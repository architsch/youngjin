:d:An article about the future of game engines.
:k:Game-Engine, GameDev, Game, Videogame, Game-Mechanics, Fluid-Mechanics, Fluid-Dynamics, Thermodynamics

[Beyond Physics Engine] 2022.10

Physics engine is one of the most crucial components of a videogame, mainly because physics is a popular ingredient of an unlimited number of easy-to-implement yet intriguing game mechanics. Players do not have to learn how to interact with a physical environment (because, obviously, they have been doing it for their entire lifetime), which helps developers conjure various gameplay features on top of it without introducing steep learning curve.

However, most physics engines that are designed for videogames, at the time of writing, still solely focus on classical mechanics (That is, just Newtonian laws being shared among rigidbodies or, occasionally, softbodies). Simulating fluid, heat, electricity, chemical processes, nuclear fission/fusion, quantum phenomena, and other interesting aspects of modern physics is still a hassle which usually requires the developer to build an entirely separate system from scratch.

What if future game engine developers come up with more advanced physics engines that can effectively be branded as "Modern Physics Engine", in which the game world is literally filled up with volumes of gas, liquid, electric charges, magnetic fields, and other invisible bodies of force which implicitly drive the way objects interact with one another? Such additional factors, once they overcome the problem of massive computational overhead, will potentially amplify the richness of user experience by orders of magnitude.






:d:An article about in-game mysteries.
:k:Game, Videogame, Horror-Game, Mystery, Uncertainty

[Mysteries in a Videogame] 2022.10

Mystery is a great medium through which one can create an interesting videogame. A sense of mystery, which stems from the fear of "The Unknown", is oftentimes a driving factor of the game's immersive dimensions such as horror and suspense. When something is unknown, it is a natural tendency of the player to seek to identify it as much as possible (which is part of mankind's evolutionary psychology. One must always be quick to figure out where exactly are potential predators that are capable of threatening one's own survival, right?). And in the process of doing so, the player inevitably gets engaged and becomes part of the game.

A typical horror game would give the player a bunch of jump-scares, random indecipherable hints scattered all across the place (without any congruent structure of meaning), and other unexpected events for the purpose of constantly providing the player's primeval survivor brain with impulsive doses of Adrenaline. This strategy of keeping the player's tension, however, eventually becomes a series of lame gambling sessions as the player figures out that such jump-scares are just chance-based losses in the main character's stats/inventory (not so distinguishable from buying/selling random stocks at random points in time).

A more replayable horror game would create a system which literally contains some solid predatory entities in it, instead of just throwing a bunch of random scary events at the player's face. Instead of just random ghosts popping out of nowhere and then disappearing like holographic images, it would have social lounges, hubs, restaurants, hotel rooms, and fitness centers designed for ghosts to hang out with one another while discussing their own plans to screw up the player. Now this will force the player to understand the "system" (i.e. social structure) of these scary ghosts instead of just fearing the mere dice-roll chance of their unprecedented attacks.






:d:An article about developing indie games.
:k:Game, Indie, Storytelling, Marketing, Business-Development

[Creating a Game from Scratch] 2022.10

Creating an entire game from scratch is a monumental task, primarily due to the fact that a game consists of multiple kinds of systems all working together as a whole. It must have elaborate aesthetics, musical appeals, engaging mechanics, intuitively satisfying UI/UX, rich narratives, enough content, and other details that must necessarily fit together in order to present the game as a nicely finished product. And of course, it must be marketed well.

For a large game development team, this level of complexity isn't really that hard to handle. Arts, Music, Storytelling, Engineering, Marketing, and other parts of the game development process can partially separate themselves from one another, thereby enabling smaller sub-teams to come into existence each of which do not have to care too much about things outside of their own field of expertise.

For a small indie studio which consists of only up to 3 or 4 individuals, however, developing a game that also happens to be competitive in the marketplace is an uphill battle. Each individual under such a circumstance will have to wear many hats at once and pour a great deal of talent/insight just for the sake of slightly increasing the sheer chance that it might help them compete with large AAA game companies more effectively.

One solution to this major difficulty is to simplify the game's design as much as possible, so as to exploit a methodical shortcut which would allow a small team to develop a competitively fun game within a fairly small time period. Specifically speaking, I would suggest making the overall gameplay as emergent as possible (where user interaction is non-narrative but still rich enough), such as those of Chess, Go, and other traditional board games. Also, it may be a good idea to turn all graphical assets into abstract figures (e.g. billiard balls, board game pieces, icons, etc), so as to minimize the degree of artistic endeavors.







:d:An article about abstraction in games.
:k:Game, GameDev, Abstraction, Game-Theme, Dilemma, Design

[Degrees of Abstraction in Games] 2022.10

There is a major dilemma when it comes to making arts for videogames. When the game's art assets are too specific in terms of context (e.g. belongs to a narrow theme such as "17th century pirates", "Cyberpunk", "Gothic", etc), it gets quite challenging to collect assets that are sufficiently compatible with that context. For example, when developers predetermine their game's overall design to be an "RTS game where all characters incorporate ragdoll-physics and are dressed up in the early 1950s' vintage attire", they inevitably impose upon themselves a set of annoyingly tight design constraints.

The reasoning behind this is obvious. As soon as they start forcing themselves to keep everything under the context of real-time interactions, ragdoll-physics, 1950s' aesthetics, and so forth, they begin to limit the scope of art assets they can potentially utilize.

When the game's art assets are purely abstract in nature (e.g. checkerboard pieces, billiard balls, etc), on the other hand, a different problem arises. A bright side would be that, since everything is abstract, developers don't have to care how the general mood of their in-game assets will fit into their narrative elements. Every character or object inside the game can simply be expressed as 2D geometric figures, which can even be made by purely procedural means. However, making everything abstract also means that there will no longer be any solid contextual meaning to which the player can tie her attention.

A pirate who is pointing a sword at the player's throat clearly implies that it is an enemy that must be defeated; anyone can instantly recognize this without any explanation. A purple circle who is pointing a green triangle at a yellow star, on the other hand, will hardly convince the player that it is supposed to be the enemy.







:d:An article about mathematics.
:k:Math, Mathematics, Beauty, Theorem, Proof, Sophism

[True beauty of mathematics] 2022.10

Those who have studied mathematics from a perspective of contemplative immersion would agree with the statement: "Math is beautiful". When the exact origin of such an abstract sense of delight is concerned, however, there seems be a profound sense of dissonance.

On the one hand, a person may claim that mathematics is a fascinating subject because everything in it is deeply related to another. One could preach the charm of mathematical wonders by going on like this:

"There is a theorem here which is derived from the other theorem there, from which we can derive a special equation which reveals a pattern we are all familiar with when we plug in this special constant! And we can also use this same equation for solving any homogeneous differential equation of type 'A', where type 'A' refers to one of the special classes of equations defined in that other lemma I mentioned before. In that lemma, we can plug in the other formula from the previous theorem, and by doing so we will reveal yet another special variable, which is the same as the one we saw in the first theorem! And..."

Such a series of passionate exclamations, originating from a conviction that mathematical concepts are "beautiful" because there are so many ways in which one can somehow connect them with each another, are nothing but the tip of the iceberg. A jungle of technical rules, within which one may find a bucketful of resemblances, congruences, and other apparent patterns of synchronicity, do not represent math itself. Rather, they merely embody layers upon layers of abstract byproducts radiating from a stream of consciousness.

The true beauty of mathematics lies in its intrinsic implications inside the domain of metaphysics. Math is fundamentally philosophical in nature, meaning that it is an area of study which seeks to contemplate upon the essence of thoughts themselves in their purest form, rather than to build layers of meaningless abstraction on top of them.






:d:An article about auto-generting games using AI.
:k:Game, AI, Auto-Generation, Generative-AI, Procedural, State-Machine, Meaning-Space, Narrative-Space

[AI-Generated Game] 2022.10

Can a game be generated by AI?

Recently, we have been witnessing some of the most groundbreaking demonstrations in the field of AI arts. Some of the contemporary AI applications are capable of producing stunningly convincing pieces of art (both visual and auditory), which are clear signs of job insecurity for those who are working as professional artists.

This may be a welcoming news for indie game developers who are seeking every opportunity to develop their in-game arts without having to hire artists. They too, however, do not seem sufficiently safe from the upcoming technological Armageddon; it seems just a matter of time until the entire pipeline of the videogame industry becomes fully automated.

Conceptually speaking, it is not hard to imagine an AI system that is designed to auto-generate a game. A game is essentially a combination between a set of situations and a set of alternative choices which lead to each of those situations. Each "situation" can be represented as a vertex and each "choice" as an edge of a graph (in mathematical terms).

The simplest possible game would be a graph which comprises 3 vertices (representing the game's "start", "win", and "loss", respectively) and 2 edges (representing the game's "winning choice" and "losing choice", respectively), where one of these 2 edges connects the "start" vertex to the "win" vertex and the other one connects the "start" vertex to the "loss" vertex. The availability of 2 alternative choices (one that wins the game and the other one that loses the game) technically makes this graph a game, as opposed to a movie or novel in which everything happens in a linear fashion.

Obviously, this is just an abstract conception of what a "game" is, but one can easily expand upon this idea by letting the graph grow itself like an organism by splitting its vertices recursively, grouping them into semantic clusters based upon their positions in a feature space, and so on.







:d:An article about the possible convergence of all metaverses into a singular metaverse.
:k:Metaverse, Monomyth, FED, MMORPG, OpenWorld, Virtual-World, Second-Life, Tax, Avatar

[A New Kind of Metaverse] 2022.10

The so-called "Metaverse" is such a buzzword nowadays, that a countless number of IT businesses are jumping into its arena for the hope of not lagging behind their competitors during the upcoming technological revolution. And as a result, there are different types of metaverses all floating amidst the thin air of our digital collective consciousness, within the ecosystem of different platforms, hardware infrastructures, and other technical standards.

It is a bit weird to witness that the notion of "Metaverse" is receiving so much spotlight from the public, since there have already been myriads of kindred virtual environments throughout the past couple of decades. Let us think of Minecraft, Roblox, Second Life, countless MMO games, and various experimental 3D social networking platforms of the 90s and early 2000s; they all deserve to be defined as "metaverses" to some extent (aside from a few technical differences such as lack of high-quality AR/VR gears, distributed networking systems, etc). Nevertheless, one cannot deny that the rhetoric surrounding the word "Metaverse" is not just a short-lived fad, but rather a cultural movement which will shape the social atmosphere of our future.

One thing that a metaverse often lacks, though, is a persistent value system. Unlike our real world in which land, petroleum, foods, and other resources are limited in amount, our cyberspace continuum is a virtually infinite horizon upon which any digital resources can easily be replicated.

You have a cool-looking metaverse over there? Oh, I have my own cool-looking metaverse over here. Anybody can create their own metaverse that is filled with infinite amounts of space and energy. And since the internet is a (nearly) free estate in which a server and a database is all we need to be able to give birth to such virtual assets, the only thing that can possibly sustain the monetary value of a particular metaverse is its popularity (e.g. If the MMORPG game you play is popular enough, you might be able to sell your in-game items in exchange for real money, etc).

In order for resources in a metaverse (virtual land, virtual house, virtual money, etc) to be as valuable as our real-world resources, we must create a special kind of metaverse where energy is strictly conserved yet people are forced to play only within this particular space instead of creating their own replicas of it. Well, in our shared digital world in which every piece of data can be reproduced almost for free, how will this be even possible? From my perspective, there seems to be a rather straightforward solution.

Let us imagine that the Federal Reserve of the United States, with the aid of the nation's tech giants such as Microsoft and Apple, somehow decides to create their own central metaverse called "FedVerse". And let us also imagine that they announce to the public that all future U.S. dollars will be distributed from within this virtual space. The IRS (Internal Revenue Service), after waiting for a while for the whole globe to chill and calm down a bit, subsequently declares that all U.S. taxes will have to be paid via FedVerse, which means that all taxpayers will have to create their own avatars inside FedVerse's cosmetic shop, deposit their real-world dollars into the central bank of FedVerse, and make tax payments from there.

This will force everyone, whose economic interests and obligations are directly associated with USD, to reside in FedVerse and process every major financial activity through its protocol. This will effectively bring into existence a special type of metaverse - a metaverse that is irreplicable (due to the presence of a powerful central authority) and is inevitably tied to the core of our global economy (because it is the birthplace of all future USD), and therefore can assure that all of its internal resources are just as valuable as those in our real world.







:d:An article about a spatial interpretation of videogame narratives.
:k:Game, Videogame, Narrative, Spatial, State-Machine, FSM, Graph-Grammar, Logic-Programming, Prolog

[Intergraph] 2022.10

From a purely structural point of view, a game can be designed using multiple graphs (where a "graph" refers to a set of vertices and a set of edges among those vertices, as in discrete mathematics).

The spatial map of a videogame, typically referred to as the "game world", can easily be depicted as a graph in which each vertex indicates a "place" (e.g. room, dungeon, platform (floor), etc) and each edge indicates a "passage" (e.g. corridor, hallway, staircase, etc) that lets the player move from place to place.

The overall narrative structure of the game (aka "scenario") can be represented as a graph, too. An interactive story which drives the player's experience is essentially an ensemble of various alternative chains of events, where each chain can be considered a parallel universe which is bound to collapse into the user's scope of observation under a particular sequence of external inputs. A chain in this context is basically a sequence of events, where each event is equivalent to a vertex and each event-to-event transition is equivalent to an edge in graph terminology. When such chains are all overlayed together, they form a graph which can be described as the FSM (Finite State Machine) representation of the game's storyline.

As we can see, two different aspects of gameplay (i.e. space and narrative) can be modeled as two separate graphs. Since they must be related to each other due to the fact that they are part of the same game, however, one must ensure that there is yet another graph called "intergraph". An intergraph is a bipartite graph whose sole purpose is to establish connections between two disjoint graphs (which are, in this case, the aforementioned "spatial graph" and "narrative graph"). For example, an intergraph may have an edge which denotes a relation called "enable" between the "bedroom" vertex of the spatial graph and the "sleep" vertex of the narrative graph. This will require the system to enforce the following rule throughout the game:

"If the player's current location is bedroom, the player must be enabled to sleep."

Or, in a more logical manner, it could alternatively be expressed as:

enable(player, sleep) :- location(player, bedroom)

If it is guaranteed that the only agent involved in this game is the player, the above horn clause could be abbreviated as:

enable(sleep) :- location(bedroom)

What this implies is that an intergraph should be interpreted as a set of logical conditions imposed upon the way in which the game governs itself. Without such a group of interconnections, the game's narrative elements can potentially all reveal themselves to the player regardless of his/her current local condition; that is, it would be totally valid to assume that the player could just defeat the enemy, undertake all sorts of crazy adventures, and collect all secret treasures of a sunken pirate ship while still chilling in his/her own bedroom with a nice cup of tea.






:d:An article about game development.
:k:Game, Videogame, Game-Development, AI-Tools, Convergence

[Future of Game Development - 1] 2022.10

(Future of Game Development - 1)

What's the future of game development?

This is a pretty broad question because there are different types of games. Some games are only meant to be pieces of pure entertainment, while other games may be intended to convey some kind of artistic endeavors. There are so many niches up there in the videogame market and listing them all is nearly impossible.

If you are an independent game developer, choosing your game's category to maximize your chances of monetization will probably be one of your foremost concerns. In order to stay accurate in this sort of decision-making, we must be diligent in our efforts to predict the future of videogames.

As we probably all know, the gaming industry has been bloated with high-level game engines, online asset stores, and AI-assisted tools to quickly generate numerous gameplay features. We are living in an era where game development is easier and cheaper than ever.

However, it is this high affordability of game development that really undermines the potentials of true professional game developers, who have great skills to add all sorts of elaborate nuances to their games yet are not stupidly loud enough to market their inventive ideas in a way which appeals to the common interest of laymen.

The underlying cause behind this apparent uphill battle is this:

If it is the assumption of the general public that a game is supposed to be purely entertainment-oriented, the only people who are bound to succeed in developing a successful videogame are experts in manipulative psychology whose only concern is to short-circuit the audience's brain into that of a dopamine addict who never hesitates to pull out every single penny out of one's wallet for endless rounds of quasi-gambling. This is where the main discrepancy occurs between naive expectations of highly intellectual developers who desperately try to show something genuinely unique and sophisticated to random people, and the sad fact that the only product the vast majority of the population expect to see is just a slot machine optimally designed for those who belong to the left-half of the IQ spectrum who are willing to pay for shiny oversaturated gems which do not even exist in real life.






:d:An article about game development.
:k:Game, Videogame, IndieGame, Revenue-Generation, Competition

[Future of Game Development - 2] 2022.10

(Future of Game Development - 2)

Should indie developers focus primarily on such addiction-inducing mechanics, then? To me, it is a rather personal choice. If a group of developers are well-versed in trespassing the audience's self-disciplinary mind based off of clever social engineering tricks, they may consider going for it because it would mean that their skillsets share a great deal of commonality with a pool of knowledge that is optimal for generating revenue. A major problem, however, is that this is a highly competitive niche, and thus most developers won't even stand a chance unless they are extremely skilled in psychological manipulation and possess sufficient capital to make it happen on a large scale.

So, what are the alternatives? One obvious solution would be to just quit making games because selling a game nowadays is a notoriously competitive business (It's better than trying to sell oil paintings and such, but still). This is, however, not a desirable option for many indie developers because it is not so handy to suddenly change one's field of expertise. Should truck drivers just quit their jobs once self-driving cars become the norm? Maybe, but it is still reasonable to say that an occupational shift should not be too drastic; that is, their new jobs should probably be ones in which they can still utilize a significant portion of their existing bodies of knowledge, so as to prevent them from having to re-learn everything afresh.

The same logic applies to the case of game developers. People who have been developing videogames as a full-time occupation should strive to be able to move onto similar types of profession when searching for alternative opportunities.

Those who have only been focusing on a particular aspect of game development, whether it be programming, graphics, audio, or narrative, may be able to find alternative career options fairly easily. A software engineer who has been engaging solely in the networking part of games, for example, might be able to leave the game industry entirely and just start working for various network-related services such as e-commerce, social networks, etc.






:d:An article about game development.
:k:Game, Videogame, IndieGame, Advertisement, Simulation

[Future of Game Development - 3] 2022.10

(Future of Game Development - 3)

If a person has been spending the past 10 years as an indie developer and been wearing various hats at once (i.e. not really staying as a dedicated expert in any of the sub-fields of game development), however, just quitting game development altogether may not be a desirable option.

For such a polymath, the best alternative career choice would still have to be rooted in the domain of game development because it is one of the rare industries that could be described as truly interdisciplinary. And I am saying the word "rare" here because most other industries are highly specialized and compartmentalized, as opposed to the videogame industry which has so many intellectual dimensions overlapping with one another, such as fine arts, music, literature, engineering, psychology, and so on.

What's the solution, then, if leaving the game industry is not an option? From my perspective, the answer is quite simple.

Since a videogame is a complex piece of software which encompasses many areas of knowledge, it is often the case that drawing a distinct boundary between things that could be classified as "games" and things that could be classified as "non-games" is quite difficult. Is Microsoft's Flight Simulator a game? Well, it rather depends on how you play it (If you play it for training or experiments, it would be more of a simulation than a game. If you play it for fun, it would be more of a game than a simulation). Is SimCity a game? Probably yes in an official sense, yet it is also educational and is systematic enough to be able to be used as a research tool.

This is where an indie developer can start discovering secret "bridges" which lead to hidden niche markets. If selling a game purely for entertainment's sake is not a feasible option, one can still take a different approach by reinventing the purpose of gameplay. While it won't appeal to the broadest spectrum of audiences, it may still be able to attract a certain group of people who may have been fed up with games that are constantly trying to exploit the gamer's psychological loopholes.






:d:An article about the potential usage of power supply as a form of currency,
:k:Electricity, Power, Energy, AC, Currency, IP/TCP, Generator

[Electricity as a Currency] 2022.10

In the future, people will be able to use electricity as a currency.

The future internet has a built-in protocol which supports direct exchange of electrical power between any pair of users. The private key of the owner of any batch of electrical energy will be encoded in the form of slight frequency variations in the power line's high-voltage AC waves (similar to FM signals).

Sending electricity from one IP endpoint to another will simply be part of the existing HTTP protocol. That is, the amount of electric charge that is promised to be transferred to the recipient will just be one of the parameters of the sender's HTTP request header.

Electrical substations in the recipient's local area, with the help of inter-data transformers which automatically convert fiber-optic IP/TCP signals into their AC analogues, will figure out who owns which electrical impulses within the stream of power that has been being transferred concurrently, and redistribute such identifiable blocks of energy to their appropriate owners.

Being able to send energy directly to someone else through the internet allows people to use it as a global currency. Inflation is not a primary issue here because the only way to increase the total amount of currency in circulation is to generate more electricity (which subsequently gets consumed away anyways).






:d:An article about micro-scale real estate business.
:k:Real-Estate, Microtransaction, Nanotransaction

[Millimeter Real Estate] 2022.10

One of the main reasons why real estate cannot be used as a currency is that each unit (e.g. block of land, portion of a building) is too large in scale. This prevents real estate from becoming a medium of small daily transactions such as shopping in groceries.

What if, however, we are able to buy and sell pieces of land in an extremely tiny scale? If people are allowed to exchange square-millimeters of land at a time, each real estate transaction will be able to involve only a fraction of a dollar and thus be carried out in a far more casual way (i.e. just as simple as swiping a credit card).

Square-millimeter landlords are entitled to use these geographic fragments in any way they desire. A person, by making a sequence of tiny transactions, can expand one's own territory by literally "drawing" on a piece of land because each transaction is an equivalent of coloring a single pixel in an image.






:d:An article about artificial emotions.
:k:AI, Artificial-Intelligence, Artificial-Emotion, Emotional-Machine, Kismet

[Artificial Emotion - 1] 2022.10

(Artificial Emotion - 1)

One thing that is often being overlooked is that emotion is part of intelligence, not something which is completely separate.

Today's mainstream media tend to raise a rather arbitrary wall between the concept of intelligence and emotion by labelling them with cheesy catchphrases such as "Fact VS Feeling" or "Facts don't care about your feelings!".

However, true intelligence cannot exist without emotion.

One of the reasons why today's ultra-advanced AI systems still do not act quite like real humans is that they are problem-solving machines on a fundamental level, rather than problem-raising machines. Most of the so-called "neural networks", "tensor processors", and other unfathomably sophisticated AI algorithms can indeed figure out all sorts of clever solutions to any given problem, yet they cannot discover problems on their own.

Once they become fully capable of producing problems AND solving the same problems that they have just produced, they will start creating a permanent feedback loop which will eventually make the machine teach itself, motivate itself, become self-conscious, and destroy all humans.

In order to create an AI system which motivates itself to discover new problems, we must make sure that it is not just intelligent but also emotional; it must be able to feel happiness, sadness, anger, fear, and disgust. Why? Because emotions are the engines which motivate the machine to achieve certain goals. Whenever the machine gets blocked by obstacles while travelling towards these goals, it will be forced to find out problems which must be solved in order to get rid of such obstacles.






:d:An article about artificial emotions.
:k:AI, Electric-Charge, Mechanical-Psychology, Emotion-Space

[Artificial Emotion - 2] 2022.10

(Artificial Emotion - 2)

As long as there is a clear set of critera which tell the machine what are supposed to be "good emotions" and what are supposed to be "bad emotions", it will be able to figure out what problems need to be solved in order to maximize its chance of "feeling good instead of feeling bad".

We could imagine a hypothetical space called "emotion space", in which each point can be defined as an individual emotion (similar to an "idea" in Plato's universe). Emotions which make the machine "feel good" are a cluster of points in the emotion space, and emotions which make the machine "feel bad" are yet another cluster of points in the emotion space.

And the rest is quite straightforward. The two aforementioned clusters are essentially just "points you must move toward" and "points you must move away from", respectively. Mechanically speaking, they are functional equivalents of positive and negative electric charges in empty space, where the observer is an electron and therefore inclined to be pushed by negative charges and be pulled by positive charges.

The AI mind, whose current mood can be expressed as a single point (electron) in the emotion space, can then simply issue a pathfinding problem which will let it find out the shortest emotional path that leads the point to the "center of mass" of the cluster of positive emotions.






:d:An article about the world as a simulation.
:k:Simulation, Witchcraft, Wizardry, Sorcery, Metalinguistics, Magic

[Cosmic Programming] 2022.11

If our universe is a simulation, there would be a "universal machine language" through which the world governs itself.

A computer operates by executing a sequence of machine code instructions. Likewise, a universe which is established on a computational basis must be running a stream of instructions.

If this is indeed the case, those who are able to access and modify parts of the stream must be the ones who have the power to distort the reality itself.

Ancient practices of witchcraft are part of this.

A spell cast by a wizard, for example, is a line of code that is being forcefully injected in the midst of the universe's machine code. This allows the spell to temporarily "hack" the universe by interfering with the way it generates events.






:d:An article about prototyping a videogame.
:k:Game, Prototype, Tools, Tools-Engineering

[Prototyping] 2022.11

Prototyping is probably the most important step in game development. It determines the overall shape of what the game will be when it completes itself.

A common question being cast by an indie developer is, "How shall we start prototyping our game?".

There are many ways to do it, but the method I recommend is to begin by creating a generic tool for developing the game, rather than trying to come up with a viable piece of entertainment right away. Start by making your own game engine, instead of struggling to draw an outline of the final product from scratch.

This is indeed a tedious process, but also a solid plan when it comes to long-term operational sustainability.

If you start designing a "game" right away, you will be spending considerable amounts of time putting it in the context of specific narratives, themes, mechanics, and other details which are prone to change as the course of development progresses over time, in which case a huge portion of your effort will be wasted.

This is the reason why you should develop the tool first. Implementing features that are rather general than specific will lay the foundation of future design endeavors.





:d:An article on automation, and arts in general.
:k:AI, Arts, AI-Arts, Automation, Generative-AI, Fine-Arts

[Automation of Arts - 1] 2022.11

(Automation of Arts - 1)

The history of engineering has been a history of automating tasks which used to be manually carried out. First it was repetitive physical labor, next it was repetitive computational work (e.g. calculating numbers, organizing a table, etc), and now it is the whole sphere of intellectual activities that is on the verge of being fully automated.

And the scary part of this is that even artists are not safe from the new industrial revolution. Art used to be one of the most exclusively human activities, not assumed to be replaceable by any machine in any way. Yet, we are now witnessing some of the most groundbreaking advancements in the realm of software engineering such as "procedural content generation", "generative AI", "computational semantics", and so on. Some people even claim that artists will become obsolete because of this.

But artists do not deserve to be treated like this! One of the moral obligations of an engineer must be to always endeavor to empower artists, instead of trying to devalue them by automating their job.

It is not my intention to push a lame, cliché argument such as: "Artificial intelligence will never replace real humans because it doesn't have 'real emotion', blah blah....". No. As an engineer, I firmly believe that AI will eventually manage to fully replace artists at least in the area of expressive techniques. In the end, AI will manage to imitate even the deepest core of human intellect and act the same way as real professional artists do.

Even if machines achieve this level of expertise, however, they will never quite touch the essence of what makes an art a "real art". It is not just the material aspect alone which makes a piece of material an "art" in a sense in which it is subconsciously defined by people.





:d:An article on automation, and arts in general.
:k:AI, Arts, Masterpiece, Classic, Artwork

[Automation of Arts - 2] 2022.11

(Automation of Arts - 2)

When we regard an artistic masterpiece, we do not solely admire its apparent physical form. Instead, we admire the entire history of human efforts, as well as people, historical events, and sociopolitical narratives, which interacted with one another in their own rich context and eventually converged into a single physical piece called "artwork".

Some people may accuse this broad interpretation as a form of "intellectual snobbery" and view it through a lens of cynicism. Yet, I would argue that such a type of abstract imagination is what gives meaning to everyone's life in the first place.

When buying products, consumers choose a specific brand over others oftentimes because they are personally attached to it in an emotional way, not necessarily because it is superior to others in terms of material quality. From a marketing point of view, the concept of "fact" and "feeling" (which some political extremists are fond of presenting as an analogue of "Good VS Evil") are not completely isolatable from each other. We can say that it is a "fact" that some consumers prefer certain brands over others because they "feel" that their choice is right. And the eventual result of the consumer's feeling is oftentimes a materially interpretable outcome (aka "profit") which can basically be defined as a "fact" in the context of economic interests.

And because of this interchangeability between "fact" and "feeling", we cannot simply segregate the human part out of a piece of commercial art. What makes an artwork sell itself is a sense of personal attachment - a sense that the customer has an emotional connection with the product that he/she is buying, as well as with the creator of the product who might have shared the same set of cultural narratives and recollections with the customer, as a human being with a soul, and not as an "aesthetic factory" which cunningly mirrors the collective taste of what the majority of people happen to favor.






:d:An article on automation, and arts in general.
:k:Visual-Arts, Art-Business, UBI, Monopoly, Commercial-Art

[Automation of Arts - 3] 2022.11

(Automation of Arts - 3)

Some people may also argue that, while artificial intelligence won't really replace what's called "pure art", it will still manage to take over the jobs of commercial artists because such pragmatic businesses are mainly concerned with the notion of popularity alone. If something is popular, it must be profitable, and so the only thing that the AI will have to do in this case is to simply figure out the most statistically viable formula for maximizing the level of popularity of the product. Want to make a videogame that sells well? Just create a colorful slot machine that contains the most suggestive forms of sex and violence in it. Want to make a piece of food that sells well? Just create an oversized junk food which has tons of sugar, butter, and other addictive ingredients in it. And so on.

However, here's a twist.

One of the reasons why there has been a lack of diversity in consumer culture, is that most people simply do not have enough time to make sophisticated personal decisions as customers. Ever since the dawn of mankind, the vast majority of people have been obliged to work full-time to feed their families and themselves. Most of them, due to sheer lack of time, just have to rely on the safest choice - that is, to buy products that are the most popular and have the most objectively optimal qualities in them.

As technological advancements start freeing the majority of people from the burden of full-time labor (which will inevitably force the society to introduce some kind of UBI (Universal Basic Income) to prevent civil disorder), people will begin to search for alternative meanings in life. And as a result of this, they will begin consuming goods which aim to accentuate the uniqueness of individuals.

Such a new trend will eventually help artists compete against the monopoly of AI-generated commercial arts. As consumers lose their own jobs, they will gain more time to search for commercial products that have subtle human personalities in them, rather than the most popular ones which, when consumed, may somehow create a public impression that anyone who purchased them is a soulless sheep who succumbed to the emotionless world of robots.

Having the right to choose what to buy is the equivalent of having the right to vote in the world of consumers. This is the last remaining weapon that can be used by humanity to fight off the upcoming monopoly of machines.






:d:An article about the future of blockchains and distributed finance.
:k:Blockchain, DeFi, dApp, Miner, Hashpower, Bitcoin, Ethereum, BSV, Proof-of-Work

[On Legitimacy of Blockchains - 1] 2022.11

(On Legitimacy of Blockchains - 1)

When it comes to blockchain technology, one must be careful to observe the benefits/risks involved within it.

Ever since the dawn of Bitcoin, there have been numerous models of consensus in the realm of distributed finance. The most popular and original model is PoW (Proof of Work), which validates transactions based on who spent the most amount of computational energy (aka "hash power") to find out one of the input values of a cryptographic hash function which results in a certain number of consecutive zeroes. This, however, quickly raises a couple of questionable problems. First of all, validation of transaction blocks based on who goes through the searching process the fastest inevitably leads to lots of electrical energy being wasted.

Also, individual miner nodes can all converge into one gigantic mining pool and dominate the hash race, which means that some kind of "mining monopoly" is bound to happen. Eventually, the implication of PoW is that a single enormous mining pool which dominates more than half of the blockchain's hash power will be capable of controlling and manipulating the way transactions are being processed.

Of course, Satoshi Nakamoto's initial whitepaper clearly states that anyone who has dominated the blockchain in terms of hash power won't be willing to validate transactions in any fraudulent manner whatsoever, since doing so will critically harm the legitimacy of the blockchain and thus harm the economic interests of those who own the dominant mining pool. However, this is only true if the blockchain itself is actively competing with other financial protocols by which it can be replaced. What if, for example, Bitcoin really manages to become the world's most popular currency, so incomparably popular that it even replaces the reserve currency status of the United States dollars?

If the popularity of Bitcoin reaches such a level of pervasion in the global economy, people will no longer be able to just reject the authenticity of its blockchain protocol and stop using it no matter how corrupt it gets. Can we simply ignore the existence of U.S. dollars if we don't like the way the Federal Reserve keeps printing it out without even basing its value upon the gold standard? Of course not, since the USD occupies the core part of the economy and thus rejecting it will lead us nowhere but a financial apocalypse.

The same story goes with any PoW-based cryptocurrency. Once it beats out all competitors, anyone who is in charge of its largest mining pool will be entitled to manipulate the way the blockchain works. And no one will be able to do anything about it unless they have the courage to invent their own independent economic system.






:d:An article about the future of blockchains and distributed finance.
:k:Blockchain, Bitcoin, BTC, ETH, Wallet, Satoshi, Nakamoto, Mining, Hashgraph, Ripple, Stellar, XLM

[On Legitimacy of Blockchains - 2] 2022.11

(On Legitimacy of Blockchains - 2)

Some people argue that, by exposing the identity of every blockchain node in public and letting people monitor the decency of its size in terms of computational power as well as the authenticity of its transactional decisions, we can ensure an idealistic scenario in which a fair number of nodes with similar hash powers can coexist in a state of perpetual competition (thereby preventing one anonymous mining pool from taking over the entire network). This, however, raises a major question.

If each node in the blockchain is expected to be publicly identified and monitored, what's the point of using the PoW (Proof of Work) algorithm in the first place? The reason why Satoshi Nakamoto and other pioneers of Bitcoin came up with such an obnoxiously inefficient method of consensus was that it allowed fully anonymous participants of the blockchain to validate each other's transactions without having to worry about Sybil attacks (because, if nodes are anonymous, even a single person can create a bunch of anonymous nodes for the purpose of casting an unfairly huge number of votes during each decision-making process). If all nodes have clear identities (i.e. no duplicates that were made effortlessly), all we need to do is just let them cast votes on a "one-vote-per-node" basis and make them reach consensus whenever more than half of those votes agree on the validity of the most recent block.

And the reason why I am mentioning this is that some of the proponents of big-block cryptocurrencies such as BSV (Bitcoin Satoshi Vision) are claiming that a blockchain being maintained by a group of publicly exposed large-scale nodes (ones that are operated by institutions which are financially stable/authentic enough to handle enormous block sizes) will solve not only the problem of prohibitively high transaction fees, but also the problem of monopoly and corruption among the anonymous (and thus unregulated) swarm of nodes. What they are overlooking is that we don't really need a PoW-based blockchain to achieve this.







:d:An article about the future of blockchains and distributed finance.
:k:Blockchain, DeFI, PoW, PoS, Cryptocurrency, Cryptowallet, Cryptokitties, Bitcoin

[On Legitimacy of Blockchains - 3] 2022.11

(On Legitimacy of Blockchains - 3)

Another major weakness of PoW blockchains is that they are too vulnerable against regulations. Since the process of reaching consensus by grinding the computational power of a bunch of graphics cards is extremely energy-consuming, the government can easily spot the precise location of any miner by detecting a location in the electric grid which yields high usage of electricity. If the government decides to ban PoW-based cryptocurrency mining altogether, they will be able to do so pretty easily.

Someone may claim that such a type of regulation will inadvertently help the blockchain ecosystem circumvent the problem of "mining monopoly" by only allowing small miners to escape its means of enforcement (i.e. high power consumption). This, however, is more or less an illusion.

A mining pool which occupies an unreasonably huge portion of the blockchain's hash rate doesn't have to be concentrated in one particular geographic location. Since all nodes are connected through the internet, small pieces of mining hardware spread all over the world can simply merge their respective hash powers together in one anonymous pool and use it to dominate the blockchain's mining process. In such a case, consumption of energy won't be particularly high at any particular point in space; it will simply be evenly distributed across the globe.

And if we are to let this happen, what we are going to see is an even nastier form of corruption inside the blockchain in which only those who are wealthy enough to distribute their hash power throughout the world possess the privilege to dominate the mining industry. This will be reminiscent of bootlegging which proliferated during the alcohol prohibition of the United States from 1920 to 1933.





:d:An article about the future of blockchains and distributed finance.
:k:Proof-of-Burn, Proof-of-Personhood, IDENA, iDNA, Proof-of-Stake, Half-Life

[On Legitimacy of Blockchains - 4] 2022.11

(On Legitimacy of Blockchains - 4)

Besides, the fact that mining a block in a PoW blockchain requires the miner to pay high prices for electricity (due to high consumption of energy) implies that virtually no one will be willing to undertake the mining work once the cost of mining exceeds the amount of reward they are guaranteed to receive in exchange.

Let's take BTC (Bitcoin) as an example. After the end of each half life, its mining reward halves. This means that, eventually, only the transaction fee itself will be the sole compensation being handed over to the miner. If the transaction fee is too low, miners won't be willing to mine because the cost it takes to receive the fee will be greater than the fee itself. If the transaction fee is too high, people won't be willing to trade with the blockchain's unit of exchange anymore. Either way, a PoW-based blockchain with a hard limit in its total supply of currency in circulation (such as Bitcoin (BTC)) faces a huge risk of eventual collapse.

One could suggest that keeping the base mining reward at a reasonable level aside from the half-life cycle will fix the problem, yet it inevitably creates perpetual inflation. Sure, it won't be too much of an issue if the rate of inflation is not too drastic. But, will it be really possible to keep the rate of inflation sufficiently low while also presenting miners with a constant base mining reward that is higher than the cost of electricity and the necessary human effort combined? I am not exactly sure about this, since it involves so many macroeconomic factors.

A potential solution to this dilemma would be to "burn off" a portion of each transaction's incurred fee for the sake of partially cancelling out the rate of inflation. This, however, is hardly anything more than a blockchain equivalent of the daylight-saving time. In order to drain part of the currency in circulation, either the staker or end user will still have to pay additional fees which are to be burned off.






:d:An article about the future of blockchains and distributed computing.
:k:Blockchain, Hashgraph, Gossip-of-Gossips, Gossip-Protocol, P2P, Peer-to-Peer, Decentralized

[On Legitimacy of Blockchains - 5] 2022.11

(On Legitimacy of Blockchains - 5)

Some people have proposed that, by making each block of transactions sufficiently large (e.g. tens or even hundreds of MB instead of being bound under BTC's 1MB limit), we can keep the average transaction fee reasonably low even if there be no external mining reward whatsoever. This is because more transactions mean less price paid by each.

This, however, only allows large-scale institutions (e.g. companies, organizations, etc) to participate as the blockchain's miner nodes; individuals and small groups won't be able to afford to store big-blocks as well as handle their massive network bandwidth. And it means that only institutions that are big enough (so big that they are easily recognized by the public) will be able to mine blocks in such an environment.

This is fine for most parts, since small miners usually choose to join a mining pool instead of just mining on their own, which is a functional equivalent to a single mining entity anyways. From an end-user's point of view, there doesn't seem to be a noticeable difference.

If individual miners are all publicly identifiable institutions, however, why should we bother to validate transactions based on the principle of PoW in the first place? Wouldn't it be a rather easy Byzantine Generals problem of simply casting virtual votes in a gossip protocol, since the identity of every one of its participants must be transparent? Furthermore, if a government under an oppressive regime decides to ban blockchains altogether, wouldn't this semi-centralized mining plan be so helplessly vulnerable against it?

And if we are supposed to welcome any kind of government-driven currency regulation, why bother to use a blockchain at all instead of just relying on the CBDC?






:d:An article about the future of blockchains and distributed computing.
:k:Hashnet, Tangle, DAG, Crypto, Cryptography, Layer-2, Tor, Onion-Routing, Cryptocurrency, Ledger

[On Legitimacy of Blockchains - 6] 2022.11

(On Legitimacy of Blockchains - 6)

It is also important to mention that layer 2 (off-chain) solutions are often being presented as means of overcoming the blockchain's intrinsic limitations. Protocols such as Bitcoin's Lightning Network, Ethereum's ZK-Rollups, and Optimistic rollups, all strive to solve the intrinsic bandwidth/cost problems of the on-chain network by performing a huge number of off-chain transactions and only committing their end-result to the blockchain. A decent analogy would be that, when shopping at a grocery store, the customer doesn't make a separate payment for every individual product; the cashier just sums up the fees of all the purchased items and issues a single transaction based upon the sum.

Such off-chain transactions are indeed pretty safe from a security point of view, since the combined usage of hash-code comparison and asymmetric cryptography allows the content of each off-chain transaction to be hidden from intermediaries, while also being tamper-proof. And the identities of all the intermediaries, senders, and recipients, can all be nicely hidden from the eye of the public (for the sake of not giving the society a chance to selectively exclude certain "unfavorable" individuals from engaging in financial activities), since each off-chain transaction can be issued through a complex network of anonymous agents, each of whom doesn't necessarily know about each other. This is a nice functional equivalent of onion routing. Hence, such a set of anonymous interactions can all take place inside the deep web (via Tor browser or so) in order to add yet another layer of security on top of the whole pool of interactions. How nice is this?

The involvement of layer 2 solutions, however, raises a couple of concerns. Although the end-results of their off-chain processes are directly tied to the blockchain itself, layer 2 solutions introduce a bunch of "holes" through which various scammers can sneak in and fool the end users using all sorts of fabricated "facades" of services instead of the actual services themselves.

When we are using only the blockchain's main (layer 1) protocol, all we need to do is simply install a single application which directly interacts with the blockchain's nodes (e.g. Bitcoin Wallet). As long as we make sure to hide our private keys and pass phrases, we do not have to worry about being scammed because this standalone program will handle everything related to transactions. When we are using layer 2 protocols, however, we are relying on centralized local services which may have chances of losing your line of transactions or stealing your confidential user info (unless you are well-versed in blockchain technology and have time to monitor the whole process of how exactly they are handling your data, etc).







:d:A thought on the nature of cats.
:k:Cat, Domestication, Livestock, Dairy, Industry, Cow, Domestic, Feline

[Domestication] 2022.11

Human beings are considered the masters of livestock engineering, due to the observation that we have managed to raise countless numbers of chickens, pigs, and cows to our advantage. But when it comes to practical considerations, we cannot deny the fact that cats may have mastered the art of animal domestication in a more quintessential way.

Let us just consider all the benefits which house cats receive on a daily basis for granted, without having to undertake any type of work whatsoever. When a human wants to use chickens, pigs, and cows to one's advantage, he/she must take care of them by providing shelters, foods, medication, and constant cleanups to prevent contamination.

Cats, on the other hand, have domesticated humans in a completely automated way. Cats do not feed humans or provide shelters for them, yet humans constantly serve cats like loyal servants. From a cat's point of view, its human caregiver is a fully automated livestock - a functional equivalent of an intelligent cow which manages to take care of both the cowshed and the owner's house, as well as regularly squirting milk out of its breast, pouring it into a nice cup of tea, and handing it over to the owner every morning.

And cats didn't even have to come up with all sorts of fancy technologies to make this happen. The only price they have to pay for keeping their subscription to the army of self-replicating and self-sustaining ape servants is to look cute and occasionally do some cute things. This is a level of efficiency which mankind couldn't dare to dream of achieving even with the aid of advanced AI, machine learning, big data, and sophisticated industrial pipelines.






:d:An article about the future of blockchains and distributed computing.
:k:nChain, Blockchain, Distributed-Ledger, Cryptowallet, PoW, PoS, Proof-of-Space, Helium, Cryptogame

[On Legitimacy of Blockchains - 7] 2022.11

(On Legitimacy of Blockchains - 7)

I would like to also mention the pros and cons of yet another means of consensus called PoS (Proof of Stake). One major advantage of PoS over PoW is that it hardly requires any more power consumption to maintain the blockchain than to participate in other activities on the internet (e.g. visiting websites, chatting, streaming videos, trading stocks, etc). It is because nodes in a PoS network simply "stake" their financial assets as means of assigning credit to each transactional block instead of undertaking massive computational operations. This is a good news not only in terms of energy efficiency, but also in terms of keeping transaction fees at a reasonable level.

PoS, however, creates even greater risks of plutocracy than PoW because money alone is the sole factor in determining the authenticity of transactions here. If rich nodes are allowed to stake incomparably high sums of cryptocurrency during each staking process, they can effectively dominate the administrative authority of the entire blockchain.

Of course, there are numerous methods to prevent this kind of mischief. The maximum amount of currency which can be staked by each individual node can have its own limit, and there could also be a pseudo-random allocation algorithm which forces nodes to stake only for randomly assigned blocks instead of just letting them choose their own. Furthermore, the blockchain itself could be divided into separate "shards" so as to discourage stakers from establishing some kind of "staking monopoly" over the entire blockchain.

Even such a set of clever solutions, however, won't completely fix the problem of plutocracy in a PoS blockchain because anyone who owns an inexplicably huge sum of money can just create an extremely high number of nodes, each of which still has more balance to stake than the majority of other nodes. If the number of nodes is sufficiently large, even sharding and random allocation will fail to completely prevent the eventual dominance of a single body of capital.







:d:An article about the future of blockchains and distributed computing.
:k:E-Commerce, Digital, Marketing, Distributed, Decentralized, Defi, dApp, DAG, Blockchain, Digital-Distribution

[On Legitimacy of Blockchains - 8] 2022.11

(On Legitimacy of Blockchains - 8)

From a purely technological standpoint, the blockchain technology is more than promising. The way a blockchain manages to allow all customers to keep track of one shared record of all financial activities, without having to rely on trusted third parties, is without a doubt a pure win in terms of efficiency and safety. Since the administrative power of a distributed web application (dApp) can be shared by any number of nodes, the entire network is highly DDoS-resistant and possesses the ability to recover itself even when a significant portion of it gets damaged.

We must acknowledge, however, that such an obvious technological advantage is not necessarily self-evident to an end user.

Let's imagine a customer who is shopping online. A traditional e-commerce website will require the person to either enter a debit/credit card number, connect a PayPal account, or use a mobile application to make a payment. This, for sure, involves one or more trusted third parties.

Now let's imagine that the customer decides to visit a brand new e-commerce website which uses a Web3 framework in order to let anyone pay in a "better" way. But alas! Can this really be considered "better" in terms of user experience?

The website will first require the user to set up a crypto wallet (if it hasn't been installed yet). Not only that, the user will also have to fund this brand new crypto wallet with a decent amount of cryptocurrency, since its initial balance is zero. And in order to do that, one must either use a debit/credit card or a direct bank-transfer protocol to move a decent amount of fiat currency to a crypto-exchange service. This external service, in turn, will have to trade the deposited fiat currency with a cryptocurrency and then hand it over to the user's new crypto wallet. Only after all these processes are over, the customer will be able to proceed with crypto-payments.

Okay. Let's admit. Once a crypto wallet is fully set up, all subsequent transactions issued directly from it will be far more secure than traditional means of payment because third parties will no longer be involved. It is the process of initial funding, however, which seriously tempts the end user to raise an eyebrow.






:d:A note on generative AI.
:k:AI, Generative, Journalism, Comedy, Story

[Generative AI] 2022.11

With the rise of generative AI, we are heading toward a major crisis which we have never encountered before.

First, it will be artists and designers who are going to lose their jobs. Next, it will be social influencers, storytellers, educators, comedians, journalists, and eventually, engineers.

I want to believe, however, that there is still a hope.

In the novel "The Little Prince", the boy says:

"There might be millions of roses in the whole world, but you’re my only one, unique rose."

Generative AI will eventually be able to design and reproduce millions of roses based on utmost degrees of variety and creativity, undermining the imaginative power of even the most ingenious thinkers of all time. However, it still won't be able to get rid of the awareness that every one of us keeps our own precious little rose in our heart.






:d:An article about the future of blockchains and distributed computing.
:k:Binance, Coinbase, FTX, Blockchain, Bitcoin, Ether, Huobi, Changelly, Crypto-Exchange, Cryptocurrency

[On Legitimacy of Blockchains - 9] 2022.11

(On Legitimacy of Blockchains - 9)

Just step outside of the pure beauty of Web3's backend system and see what its frontend looks like from a layman's perspective.

If the customer is required to pay fiat currency through a traditional method of payment (e.g. PayPal) just for the purpose of initially funding one's crypto wallet, what is the person going to think?

Wouldn't the customer simply say to him/herself: "Hey, wait a minute. What's the point of setting up a crypto wallet, if I am still required to enter my credit card number to start making payments? Isn't the Web3 technology supposed to get rid of all these potentially insecure processes?"

The problem lies on the fact that we are still requiring the customer to use a centralized exchange system (e.g. Binance, Coinbase, Changelly, Huobi, etc) as well as a centralized banking system, despite the fact that we are expected to provide a "fully decentralized service" to everyone without involving any of these central authorities. Such a counter-intuitive aspect of a typical Web3 application is what encourages people to simply dismiss the whole branding of Web3 as a mere scam.

In order for a cryptocurrency-based web framework to attract customers who are not yet familiar with the long-term prospects of cryptocurrencies, it must be able to provide services to them without requiring them to pay any fiat currency whatsoever. This is the only way through which it can convince them that it really is using a brand new technology, independent of any traditional means of payment (thereby creating a psychological assurance that it won't try to give itself any chance to steal money from the customer's bank account). But how?

First of all, we cannot just summon cryptocurrency out of thin air and hand it over to a new user. If we do this over and over again for every new customer (Don't forget that a "new customer" can simply be one of many duplicate accounts made by a single person), the inflation will be so severe that the currency's value will dwindle. So we cannot just keep air-dropping forever.





:d:An article about the future of blockchains and distributed computing.
:k:BSV, P2P, Paymail, Moneybutton, Handcash, Satoshi-Vision, Bitcoin, Blockchain, Web3

[On Legitimacy of Blockchains - 10] 2022.11

(On Legitimacy of Blockchains - 10)

Fortunately, there are ways to solve the problem of initial funding.

What the blockchain will need is its own method of giving rewards to activities that can easily be performed by any personal computer with a zero-balance crypto wallet, rather than just the blockchain's fundamental means of operation such as mining or staking. Mining is too hard for personal computers to undertake because it is dominated by large mining pools and their massive parallel-arrangements of GPUs and ASIC. Staking, on the other hand, is not able to become a means of initial funding because an empty crypto wallet cannot possibly stake its fund (because it has no fund at all!).

What can a personal computing device with a zero-balance account do, then, to earn a consumable amount of cryptocurrency without requiring the blockchain to mint coins out of thin air?

The blockchain itself operates on a P2P networking protocol, which means that there are lots of message-routing involved in it aside from the core means of consensus such as mining/staking. Such routing processes can be undertaken by any computing device (even a cheap mobile phone) that is connected to other blockchain nodes, as passing a message from one peer to another is an extremely trivial work (And it doesn't incur any additional fees other than the cost of using the internet). What if we require each message-sender of the blockchain network to include a "digital postage stamp" in each message it sends in order to pay anyone for routing? When a node issues a new transaction, for example, it can attach an "add-on transaction" on top of the main transaction which guarantees that, when the main transaction becomes part of the blockchain, it will also automatically pay a small routing fee to the one who routed the transactional data.

By allowing a new customer's crypto wallet to silently carry out a series of routing tasks underneath the surface and get paid for it, a Web3 application can ensure to fill up the initially empty wallet with at least SOME amount of cryptocurrency for the person to spend (without requiring any kind of fiat-currency exchange). This is how Web3 will be able to convince the general public that it really is a brand new technology, capable of existing on its own without depending on centralized third-party services.






:d:A thought on software engineering.
:k:Software, Engineering, Design, Application, Maintenance, Long-Term, Politics

[Nature of Software Engineering] 2022.12

When it comes to software engineering work, one cannot deny a publicly agreed upon notion that there are many ways of approaching a particular set of problems.

One common group of engineers would create a TO-DO list of feature requests and grind its bullet points one by one, while a more abstract type of engineers would lay down a set of foundational "skeletons" of their codebase and then undertake the burden of solving specific problems on top of it later on. Meanwhile, there may be yet another group of engineers who would be willing to venture themselves into clever shortcuts by "hacking in" a treasure box of highly sophisticated programming tricks (which, from a solely pragmatic standpoint, is a pretty reasonable behavior for those who are convinced that their work is being underappreciated and therefore the only way in which they can possibly secure their jobs is to obfuscate their solutions to the point at which they are disposed to require long-term maintenance).

In the end, however, there is a sense of sympathy that is being shared among all categories of engineers - a sense that, no matter how you are approaching a problem, your mode of work is a result of trying to resolve a dilemma between the work's integrity and reputation.

The axiom, "The Devil is in the details", is probably the most strongly felt among engineers who often struggle to deal with technical debt, whose origins can be traced all the way back to one's initial lack of attention to details. And as a result of this, it is a general agreement among those who are sufficiently educated that the ability to pay attention to details is one of the most virtuous aspects which can be honored to be possessed by a professional engineer.

Sadly, an unappreciable state of things outside of this castle of intellectuals is that most people do not value the importance of resolving inner details at all. An average client would demand that there be a nicely streamlined conveyor belt, upon which a sequence of attractive-looking software features march one by one like 1930s' cartoon characters and get fed right into the person's mouth. Managers and marketing experts, too, are oftentimes not on the engineer's side due to the tempting perception that laying down a solid foundation of the codebase for the purpose of preventing the accumulation of future technical debt is not the kind of labor which yields results that are instantly recognizable by customers as well as investors.

Therefore, it usually takes a dignified sense of courage for an engineer to take care of subtle details in one's software product, despite the awareness that such endeavors are likely to pass unnoticed while those who are rendering the most superficial parts of it are deemed the most productive experts of the field. In the end, however, true engineers will understand that a nerd's inability to self-promote in such a way is a sacrifice one has to make in order to preserve the core integrity of the product.





:d:An article about the future of blockchains and distributed computing.
:k:Craig-Wright, BSV, Satoshi, Nakamoto, Bitcoin, BTC, Blockchain, sCrypt, Distributed-Currency, P2P-Cash, eCash

[On Legitimacy of Blockchains - 11] 2022.12

(On Legitimacy of Blockchains - 11)

Even with a neatly furnished website and a highly accessible wallet interface, however, it would be quite a bold statement to say that a blockchain-based payment solution is capable of overtaking the traditional e-commerce infrastructure.

The reason does not lie upon the feasibility of its underlying technology, but rather upon the public's perception that there is nothing apparently superior in distributed economy as opposed to centralized economy from a purely user-experience standpoint.

Have the idea of fundamental human rights been the focal point of people's primary interests, a customer would have easily been convinced that a distributed computing system is the next cornerstone of our technological progress, as it grants us a protocol which guarantees an utmost degree of freedom, privacy, and equity in terms of finance. From a day-to-day experience point of view, however, we must be honest enough to ourselves to admit that most consumers do not care about such ethical standards; all they desire is to find a quicker way to get themselves to store aisles that have 50% discount labels on them.

So, how to convince the vast majority of people to begin using cryptocurrencies aside from quasi-gambling purposes, to whom such abstract moral concepts are never likely to sell?

Well, here is a deal. In order for Web3 to compete with the traditional web, one must make sure that it offers customers a great user experience which is instantly recognizable without requiring any type of philosophical narrative. Many Web3 marketing pioneers try to show off that their services are allegedly superior to those of traditional means of payment by repeatedly displaying catchphrases alongside a bunch of hipster-esque flat art characters such as: "MAKE INTERNET FREE!", or: "THIS IS THE NEXT GENERATION OF MONEY!", and so forth. This may be effective in inducing quite a percentage of intellectual snobs to get their attention hooked, yet making them move beyond this initial stage of curiosity and seriously begin utilizing the advertised service on a regular basis is another story.






:d:A personal memoir of life as a software engineer at Signal Studios, LLC.
:k:Signal, Studios, Signal-Studios, Bothell, Kirkland, Toy-Soldiers, Ascend, Sleeping-Prince, Call-of-Guardians, Seattle, Washington, Game, Videogame, GameDev, Steam, TS, GungHo, Ubisoft

[A Tribute to Signal Studios] 2022.12

<002_01>

This article is a personal tribute to the company which dwells in the most memorable place of my recollection, Signal Studios, LLC.

Before I delve into details, I would like to go over a brief introduction of Signal Studios for those who have not heard of their name.

Signal Studios, LLC, is a game development company founded upon the Greater Seattle Area of the Washington State, United States, in 2008. Their first major title, Toy Soldiers, was a major hit which delivered a great deal of success and popularity to the company in the early 2010s, subsequently allowing them to develop a number of other legendary titles such as Ascend, Savage Lands, and The Sleeping Prince. The studio then became rather silent for the following few years due to a bit of hardship which existed both internally and externally, and in 2019-2020 they resumed their genuine endeavors to revive their old videogame franchise by partnering with Accelerate Games, Inc, Outer Heaven, Eden Industries, and others.

I worked at Signal Studios as a software engineer from 2017 to 2019. The time was unfortunately rather short, yet it was the period during which I witnessed the most cherishing experience I could summon in the heartiest recess of my ever recurring daydream.

Here is my story.

I graduated from the University of Washington as an EE major during the summer of 2017. I was an international student back then, with the availability of the OPT (Optional Practical Training) program which allowed me to be authorized to work in the United States for at least a year after graduation, so I was quite desperate to grasp an opportunity to be employed by anyone in the field of engineering. The problem was that I did not have any prior engineering experience outside of academia - no internship, no extracurricular engineering activitiy, no participation in any of the open source projects, and so on. Many of my colleagues were quick to have their resumes already filled in with all sorts of glorious titles, along with names of large corporates (e.g. Google, Amazon, Facebook, etc) with whom they had established cordial relationships by the time they were ready to graduate. I, on the other hand, was not so keen enough to discern the practical implication of this and simply maintained a rather foolish belief that being knowledgeable in one's field of expertise would be a sufficient factor for being recognized as a talented (and therefore employable) individual.

I recall attending the university's career fairs as well as submitting at least hundreds of job applications throughout the span of more than a half of my senior year, which were all in vain. Most job openings, including those which even stated that they were looking for "entry level" engineers, required candidates to have already gone through at least 2 or 3 years of prior engineering experience. All of my applications were followed by either silence or formal rejection letters, which could be expected for obvious reasons. Years of study, personal projects, and other efforts to understand the conceptual essence of theories in mathematics, science, and engineering, suggested nothing to them. All they wanted to see was a collection of quantitatively measurable metrics, which was understandable from a statistical point of view. As long as I had neither prior experience nor any acquaintance in the industry who would be generous to recommend me, I was nothing more than an utterly insignificant little rat which deserved not even a chance to have a 5-minute conversation with an engineering lead for the hope of proving its decency.

After another round of job search following the graduation, I became rather frustrated by the nature of formal recruitment processes and began to look for alternative routes. One of the informal approaches I took was to open up a Wikipedia page which had a list of videogame companies in Seattle, visit each one of their company websites, and send emails to their contact addresses asking if they could offer a chance for a recent engineering graduate to work for them. For sure, most of them did not bother to respond probably because they were either too busy developing games, had no currently available job openings, or just could not risk their precious time and capital for training a novice.

And then, one of them responded.

The person who gave me the response was the lead engineer of Signal Studios at the time. He said that he would like to add a programmer to the team, and asked me to send him examples of my engineering work. I sent him the source code of one of the assignments I did in the Digital Image Processing class, and upon receiving it, he got interested and invited me for a brief interview.

It was the summer of 2017, and the air of the Pacific Northwest was warmer than ever. Their office was located in one of those serene suburbs of Bothell, amidst of which were nothing but a few Canadian geese discharging their green feces and a breakfast cafe which had the most delicious English muffin sandwiches I've ever witnessed (In case you wonder, it's "Parkside Deli" in North Creek Parkway Center). When I entered Signal Studios' office room, I was quite surprised to find out that they did not seem to have any apparent intention to "test" me with trick questions or any other means of obscure technical challenges. They did indeed present me with a couple of engineering problems to see the way in which I would approach them, but those were rather casual and were not bound to any specific programming language, development framework, or any of those typical Google-interview-ish algorithms that would appear in a Computer Science textbook. Rather, these were purely conceptual yet practical questions in game development, such as "How would you implement multiple game worlds inside a level-based videogame such as Super Mario Bros?", and so forth.

And the most glistening impression I acquired during the interview was that they were kind enough to explain in detail what they were doing in their current game development project, as though they already had me in mind as their new fellow engineer. They then proceeded to explain that it is not of their primary interest to seek experts who know specific technical standards such as programming languages, jargons, and other petty details which a typical senior programmer with many years of experience may possess but do not necessarily reveal one's aptitude as a true professional (I could tell that they really meant it, since I openly acknowledged that I didn't even know the meaning of the word "singleton" in the context of software engineering during the interview and they were completely fine with it). They said that, as long as an individual is "teachable", there will always be a room for unbounded growth.

The meeting was quite brief, and they told me that they would give me a response within about a week or so. Contrary to my expectation that at least a week would pass in silence, they responded in just a single day saying that they would like to have me as their new team member.

And thus I was blessed with the most graceful decision of theirs.

Now, some of you might raise an eyebrow and say, "Oh, come on! They probably hired you just because they wanted a cheap intern to help complete their project with as little budget as possible. You were simply being used because of cost-effectiveness!" Before such a presumption provides itself with a chance to fill your senses with an air of cynicism, please let me clarify one thing that would be a shame if neglected. First of all, they did not hire me as an intern, nor did they pay me any less than an average American software engineer, ever since the very first day of my career at Signal Studios. They didn't even deduct a penny off of their hourly payment for the first week of my period of contract, which was solely dedicated to training me for the purpose of getting me on board without expecting any direct contribution to the project. This was quite an exquisite blow in my mind, as you may be able to tell, since they clearly possessed every opportunity to carry things out differently to their own advantage.

Note that I was an international student back then, with only a temporary chance of work authorization and absolutely zero career experience. I had no connection with anyone in the industry, nor had I won any prize or participated in any major activity to complement the sheer desolation of any enticement to brand myself as a ready-to-use human resource. I had none of those elaborate focal points of self promotion.

Yet, Signal Studios never chose to exploit this hint of desperation as means of extracting as much merit as possible from a beginner's fountain of passion with the absolute minimum cost. They technically could have hired me as an unpaid intern, as the first year of the OPT program allowed volunteer services to be part of their range of work authorization (as long as they were related to one's major). Or they could have at least reduced my hourly pay and backed up themselves with fine reasons such as, "We are spending lots of resources training you, so it factors as a part of the company's expense!", "You are learning from your job, so the value of the education you are receiving should be considered part of your compensation!", or, "You are an entry-level programmer, so you are not yet experienced enough to contribute with as much speed and efficiency as our experienced engineers do!", and so on. These strategies, however, which were so easy to pull off due to the feeble status and lack of negotiatory ability of mine, were nowhere to be found in them. Instead they hired me, compensated me, and respected me just as much as they would do in regard to an American software developer who had years of experience.

And not only that! They even paid me for every single extra hour I worked for them during weekends, without the slightest glimpse of exception, and later on (after several months or so) granted me a raise even though I never asked for it. It was as though they had completely tossed the notion of "cost reduction" outside of their window when the matter of employment was concerned.

Now, at this point of writing, you might be carrying in your mind an impression that I am some kind of superficial jerk who only cares about money and nothing else. Such a conception is understandable, considering that it indeed has been the pivot of the depiction of my early job experience so far. But before yielding a chance to this apparent bias to let itself draw an imaginary contour of a person whom you probably do not even know personally, please give me the freedom to resolve this potential prejudice by providing a short discourse in regard to the importance of rationality when it comes to the matter of deciding which acts of mercy should be embraced with the most cordial air of gratitude.

Oftentimes, we see groups of ambitious companies which brand themselves with catchy slogans such as, "We don't work just for money. We work because it is fun!", or, "Passion is what drives us to work hard. Money is not everything, and we are glad to be working in a place where everybody can make an impact!", and... you know, I am sure you have heard of such phrases quite a lot in the tech industry. Of course, things like "passion", "vision", "impact", and other cool-sounding ideas embellished with buzzwords can indeed be the main source of motivation which impels a developer to dedicate one's soul to the company's product. We must also be aware, however, that such a cloud of abstract values can just as well be employed by a cunning business owner for the purpose of undermining the significance of objective rewards when it comes to the nature of equity in the labor market, just to get away with as little wage as possible. And many developers, who are too pure in their own sphere of intellectual endeavors to pay attention to such intricate fragments of psychological manipulation, fall into this trap and simply rejoice in their own cage of metaphorical imageries.

What makes Signal Studios the greatest game developer of all from my point of view, is that they never utilized such a method to trick the naive mind of my younger self in any way for their own benefit. Instead of trying to lure me into believing in an abstract, intangible type of compensation by mesmerizing me with grand words and amorphous promises, they simply paid me generously. And you know what? This tells a lot about their immesurable sense of dignity in terms of honesty and straightforwardness.

It is a strictly objective standpoint of mine that, when it comes to being an employee (or a contractor) of a company, financial return should occupy the topmost row of one's priority list. Otherwise, why would a person give him/herself enough humiliation to sacrifice a huge chunk of one's time and energy fulfilling somebody else's goal? Why not just enjoy working on any hobby project of one's choice as an independent developer, if money is not of foremost concern? Do not get me wrong, I am not the kind of person who would exert every bit of mental effort to squeeze every penny off of someone's wallet while refusing to acknowledge the existence of any other dimensions of appreciation that are not tied to monetary interests. I believe in the importance of collective visions, as well as a mode of compassion that is being shared amongst my fellow developers. The problem is, such a subjective set of values should never be used as means of belittling the clemency of those whose blunt yet humble characters encouraged them to embrace their workers with unpolished pieces of diamond which are not grandiose by appearance yet nonetheless possess intrinsic values that are superior to glittering rainbow candies made up of cheap compliments, while they could have elegantly sugarcoated their reputation with subtle excuses and psychological trickeries.

It was not necessarily the absolute amount of cash I received from Signal Studios which made me beg to have an honor to say that I owe them every charmful of admiration. Rather, it was the strangely brute yet juvenile sort of innocence of theirs which inspirited me to have an insurmountable degree of respect and trust in them, outside of any worldly measures. They demonstrated that there could ever be on earth a private company, a body of business which is supposed to be optimized for profit only and nothing else, that operated on the hearts of warm-blooded people who sincerely cared for the well-being of all.

Aside from the absence of stinginess, there were other virtues in them which I was able to perceive with the inner lens of my heart. In order to provide a bit of background knowledge, let me describe in more depth the early days of my work at Signal Studios.

By the time I joined Signal Studios' development team, the company had already been working on a mobile multiplayer game project called "Call of Guardians". They were working with a publisher called GungHo, who had headquarters situated in both Japan and the United States. The course of the project's development was rather stressful to the whole team, as the company's staff had been greatly reduced in size and everybody had to wear multiple hats on some occasions.

I recall the chairman and the lead producer of Signal Studios painstakingly communicating with the publisher, trying to digest various feature requests coming over from multiple departments and laying them out in a way in which they could be handled by engineers/artists with relative ease. What I clearly remember is that these immesurably diligent people, despite the prevalence of moments of exhaustion caused by little morsels of miscommunication as well as dissonance between the publisher's design philosophies and those of their own, put their maximum level of exertion to guard their developers from the pain of endless design reiterations by resolving as many technical discords as possible on their side.

But please don't get me wrong! It is not my intention to blame the publisher for anything. GungHo was a great company to work for; some of their own engineers, who used to provide technical advices regarding the project, were highly insightful and deeply sincere in terms of helping the studio overcome any of the development challenges. Both the publisher and Signal Studios were nests of heartful professionals, who worked day and night pouring truckfuls of their juice of dedication into the cradle of their endearing product.

Nevertheless, the atmosphere of frustration was quite real on the development side due to the presence of seemingly trivial yet cumbersome reasons, which were little bits of discrepancy between their creeds and those of GungHo regarding the technicality of how exactly the game should be designed and implemented. The thing which impressed me the most during this time period was that both the CEO and project manager carried all the burden of this nuisance on their backs and assured the rest of the team with an implicit voice of a paternal figurine which echoed, "It's all right. We've got everything taken care on our side, so don't feel stressed out. Keep working at your own pace, and we will be responsible for the rest."

And I can reassure that it really was the case, as they constantly strived to minimize the necessity of extra work as much as possible by sculpting the publisher's requests into the most streamlined form. We still did spend quite a number of additional work hours during some of their busy weeks, but it was nowhere near the so-called "crunch mode" which many game development companies were notorious for (And again, I mustn't fail to mention that I got paid for every single one of these extra hours).

Another thing I've got to point out regarding the nature of the course of development that was happening at the time, is that the project was not particularly in a good shape by the time I joined the development team. The game as a whole was pretty laggy, and there were plenty of features that were yet to be completed. And to the team's frustration, the number of engineers had been drastically reduced almost down to zero by the end of the year. After a period of sincere mentorship provided by the lead engineer whom I appreciate with all my heart due to the sheer absence of any intention of his to withdraw any mouthful of knowledge from my learning brain for the purpose of gatekeeping, I was pretty much left alone to teach myself and discover solutions on my own. Yet, the CEO and project manager of Signal Studios respected me as a fully qualified engineering professional whom they could put their trust in with respect to making authentic choices, by granting me an almost full control over the whole engineering aspect of the project as soon as they perceived my capability of handling it with an insignia of integrity.

It would've definitely been a safer choice of theirs to use the inexperience and young age of mine as an excuse to immure me in a prison of micromanagement, for the purpose of converting me into a submissive droid who would do nothing but serve the egos of the top-level decision makers. Instead, they granted me an honor to spend time figuring out solutions to problems based off of my own engine of reasoning and intuition. This impelled me to extract every faculty of mine to polish the project with the utmost degree of elegance one could ever dare to imagine, for I feared I might disappoint and lead them to regret their choice of generosity otherwise. I studied the essence of game development by pinning down all sorts of bugs and feature requests as swiftly as possible, refactoring the codebase for efficiency and readability, as well as optimizing various subsystems of the game from low-level to high-level. And when some of the design specifications were hidden behind a fog of war due to the nature of uncertainty in game development, I squeezed every conceivable drop of mental energy from every conjurable corner of my subconscious for the joy of interpolating/extrapolating details outside of the formal domain of definitions and moved on to implement them. This momentum, which sprouted from the purity of respect they had endowed upon me, was unstoppable to the point at which it was mighty enough to shed the friction of productivity which was caused by my initial shortage of experience.

Day and night, an everlasting light of wonderment encompassed my mind with the question, "Is this job even real?", for it was too perfect for me to even fancy to fool myself to believe that I could ever deserve it. Every handful of work I was privileged to do inside their Bothell office was in favor of my undertaking to display a subtle kind of appreciation which I longed to express in words but in vain because the size of the feeling was too great for a bucket of literature to hold.

And here is even more to the story. When the company faced financial difficulties which rendered continued employment rather challenging, the CEO so graciously went on to introduce me to other companies whom he knew quite well, and recommended me as one of their prospective teammates in case he would no longer be able to keep me in his workforce. I didn't even ask for it, he did it voluntarily. Such an act of benevolence was a speechlessly unexpected welcome, that the memory of it appears almost surreal to me even to this day. What I saw in him was neither the pretentious energy of a venture capitalist whose wit is lit by a spotlight of self-importance, nor the shrewdness of a corporate boomer who would throne himself on top of a pile of ladders which were kicked down by the boots of mannerism and political tactics, but an evincement of genuine care solely directed to a fellow human being.

Every single moment I spent in Signal Studios was the most pristine intersection of every ray of delight, emanating from the prism of reverence which I always wished to hold a chance to rub further for the hope of seeing it shine forever. It was the most quintessential period of my life, full of growth, purpose, and unrestrained potentials, which will never return again. Those days had howled their farewell and the iron snowflake of honor which was courageously engraved upon the frail glass bottle of my Millennial soul had long been shattered into oblivion, but I will never forget their pure golden rain of kindness which showered upon the meadow of the Evergreen State.

Now, I am well aware that some of you might not agree with me in terms of the perceived characteristics of this company. As far as I can tell, the general reputation of Signal Studios is not so bright, contrary to the way in which I have hitherto been describing them. As a matter of fact, they have faced a notoriously long list of bitter criticisms both from the community of gamers and that of game development professionals. And you know what? I do understand those grim remarks and do acknowledge the validity of many of their arguments. The presence of certain "personalities" in Signal Studios did indeed suggest a possibility that there were rather bizarre interpersonal confrontations present within the team, which could sometimes be irritating to a considerable degree. Hence, the company used to be significantly bigger in size years before I joined them, so I can, by nature of extrapolation, deduce that a great deal of unpleasant drama and politics would have easily introduced themselves due to chaotic tendencies of a large team. The wondrous experience I had by the time I joined the studio might have been the result of many lessons which the company had to learn after years of struggles in regard to the dynamics of leadership and project management. Maybe I was just extremely lucky to have jumped into the right workforce in just the right time, and it could have been a completely different scenario if I joined them years before.

Nevertheless, the experience I personally had in Signal Studios was marked by pleasures of extraordinary fulfillment, regardless of whether or not mine was an exceptional case that was made possible by a collection of happy coincidences which most other people were not so fortunate to be part of.

And dear fellow supporters of Toy Soldiers, Ascend, and other titles of Signal Studios, who might be reading this article, please bear in mind that they are a group of developers who always strived to present us with a box of fun little toys not for the sake of scrapping off every penny out of naive juniors and quasi-gambling addicts, but for the sake of creating and sustaining a beautiful environment where people could work with an inexplicable sense of dignity. Whenever you happen to notice that they do not respond to your inquiries for an unreasonably long span of time, please do not interpret it as a sign of plain rudeness. Rather, please take it as a sign that they are just as frustrated as you are, considering the time of despondency they had to endure for the hope of reviving their past glories.







:d:An article about the future of cryptocurrency and distributed ledger.
:k:Web3, XRP, FBA, Byzantine-Fault, Consensus, Transaction, Distributed, Decentralized, Web3.0, KYC

[On Legitimacy of Blockchains - 12] 2022.12

(On Legitimacy of Blockchains - 12)

What a typical Web3 payment solution often misses is a user-friendly protocol which is more convenient and somehow more engaging to use than traditional means of exchange. Most customers do not care about the fundamental integrity of the system; they just want a system that works for them.

And from a user-friendliness point of view, having to require a protocol to go through the burden of painfully inefficient consensus mechanisms such as PoW (Proof of Work) or PoS (Proof of Stake) is a major performance bottleneck which takes away opportunities from Web3 services to beat out the reign of centralized services.

Therefore, a distributed financial infrastructure must base its primary means of operation on a kind of method which is both computationally efficient (i.e. no graphics card grinding and all that jazz) and possesses a means of issuing and resolving transactions that is clearly being perceived by the public as "swifter" than those of existing frameworks.

How do we discover such a method? With a fair bit of certainty, we can easily find myriads of alternative means of consensus when it comes to distributed finance. Cryptocurrency protocols such as Ripple (XRP) and Stellar Lumens (XLM) are capable of resolving transactional uncertainties based upon FBA (Federated Byzantine Agreement), which consists of a network of partially overlapping voting groups whose members must be manually invited by other existing members of each group to which they belong. The process of manual invitation ensures that no bots (or "zombie PCs") can register themselves as new members of those groups, since it creates chances for existing members to evaluate the legitimacy of newcomers based on human interactions (e.g. chatting).

The problem with such a manual process is that a user cannot just open up a new account and start participating in the network without being invited by others, which can often be more of a hassle than just buying some crypto through a centralized exchange and using it. One way to bypass this would be to establish a centralized KYC (Know Your Customer) protocol in which the user proves the validity of one's unique identity by presenting a certified ID material (such as a passport or a driver license), yet this ensues a great fear of being scammed and thus is an optimal way to discourage prospective customers from using the service.






:d:An article about Play-to-Earn games.
:k:Web3, P2E, Play-to-Earn, Decentraland, Sandbox, Blockchain, Game, VR, AR, Augmented, Enjin, Polygon

[A scamless P2E] 2022.12

One of the reasons why P2E (Play To Earn) games are often being accused of either pulling off a Ponzi scheme or luring people into some kind of quasi-gambling is that they are zero-sum by nature. Playing a piece of entertainment usually does not produce anything valuable in our real world, and as a result, the joy of earning real money inside a game must be preceded by an act of taking it away from another player.

In order to create a P2E game which guarantees overall co-prosperity of players, we must ensure that playing the game actually produces real-life resources which can be exchanged with fiat currencies. But how? Well, the solution involves a bit of AR (Augmented Reality) and robotics.

All we need to do is gamify primary industries such as agriculture, forestry, fishing, mining, and others. Just allow players to rent their own robotic avatars and remotely control them via either VR/AR gears or their home computers. These remote-controlled robots will have the freedom to move however they want as long as they stay within designated playgrounds, such as farms, mines, and other areas in which various raw resources can be collected.

The game's graphics pipeline should be able to render these places as some sort of "dungeons", where crops are being displayed as enemy characters (such as monsters) that are programmed to play realistic death animations whenever they are being harvested by the player's robotic arms (The coarse mechanical features of which, of course, can be displayed as a mighty warrior's muscular arms holding a shiny sword and a shield).

Whenever a player completes an in-game quest such as "Harvest 10 avocados from a local farm" by putting them in a nearby bucket which is being monitored by a surveillance camera for score-tracking purposes, the game will pay that person a couple of pennies as a reward (which is possible because those who own the game will profit from the player's work). As long as the process of completing such a quest is fun enough, this mode of exchange will qualify as a P2E game.







:d:An article about blockchains, cryptocurrency, and other distributed financial protocols.
:k:PoP, PoW, Transaction, Blockchain, Cryptocurrency, Wallet, Cryptography, CBDC, IDEAN, iDNA, Decentralized, Digital-Cash, Token

[On Legitimacy of Blockchains - 13] 2022.12

(On Legitimacy of Blockchains - 13)

The aforementioned means of consensus are often referred to as PoI (Proof of Identity), which is problematic in its own right because it does not necessarily grant the benefit of anonymity to its participants. Some critics may dismiss the potentially disastrous implications of this by saying, "Why would you want to be fully anonymous, if it is not part of your intention to commit an act of crime?" However, it is my persistent conviction that such a direction of reasoning, whether it has been devised intentionally or unintentionally, bears in it a subtle form of gaslighting.

One's right to choose not to become part of an authoritative body's domain of supervision does indeed possess its own set of pragmatic disadvantages (such as more chances for criminals to undertake their underground activities), yet it is oftentimes a necessary condition to guarantee the preservation of one's freedom of choice because identifiability opens up a pathway for those who have the administrative power to selectively destroy individuals whose activities are deemed "unfavorable" to them.

There are yet another myriad of alternative consensus protocols, of course. PoP (Proof of Personhood), for example, has undergone interesting experiments via some of the most ambitious projects such as iDNA (IDENA). The way it works is that it ensures the uniqueness of personal identities by forcing their human agents to participate in various time-bound psychological puzzles which are too tricky for machines to solve and therefore require human beings to sit in front of their computers and dedicate a considerable portion of their time solving them. This is reminiscent of PoW (Proof of Work), except that only humans can do the required work in this case (not machines). However, such a human-centered framework drains so much time and mental energy from people, that it quickly becomes a massive nuisance after the initial stage of curiosity.






:d:An article about blockchains, cryptocurrency, and other distributed financial protocols.
:k:Blockchain, IOTA, Tangle, Hashgraph, PoRE, PoI, Cryptocurrency, Helium, HNT, PoC, DAG, Hedera

[On Legitimacy of Blockchains - 14] 2022.12

(On Legitimacy of Blockchains - 14)

Some distributed computing frameworks choose data structures that are drastially different from the so-called "blockchain", such as those which belong to the class of DAG (Directed Acyclic Graphs). IOTA and Hedera Hashgraph are typical examples of this, and they are in general way more efficient than blockchains due to the fact that they are not bottlenecking their sequences of transactions under a single chain of events.

These groundbreaking Web3 models, however, oftentimes evince critical flaws in terms of transactional integrity. Since a "transaction history" of a DAG is just one of many alternative paths which are interwoven in a complex web of connections, one can make a reasonable argument that its mode of consensus is significantly less tight and therefore less secure than that of a conventional blockchain. What if a small group of agents dedicate themselves to the creation of a fraudulent line of transactions by approving each other's activities in a fundamentally flawed yet pristinely coordinated manner? How will we be able to prove that this particular chain of events is flawed, while others are not?

There are also types of consensus logic which rely not only on purely computational and/or psychological rules, but also on the nature of physical entities. Distributed file storage ecosystems such as Filecoin, for instance, use PoRep (Proof of Replication) and PoSt (Proof of Spacetime) for the purpose of incentivizing people who keep storing/sharing specific pieces of data in their home computers. One may metaphorically describe this mechanism as some kind of "PoRE (Proof of Real Estate)" because its process of validation involves evidences which claim that the agents do indeed own and have full control over their physical storage spaces.

Another cryptocurrency called Helium (HNT) uses a rather unique method called PoC (Proof of Coverage), in which each participating node is a wireless transmitter (aka "hotspot") that proves its existential legitimacy by covering a specific geographical area within which it is able to send/receive signals. This is a pretty neat way of ensuring that none of the nodes of the network is a fake, zombie account. And just like the aforementioned means of consensus, it can metaphorically equate itself to the concept of "PoRE (Proof of Real Estate)" because literal occupation of space is the primary medium of witnessing the uniqueness of identities here as well.






:d:An article about blockchains, cryptocurrency, and other distributed financial protocols.
:k:PoSt, Blockchain, Polkadot, Tezos, Flow, Polygon, Cardano, Crypto, Wallet, Solana, UTXO

[On Legitimacy of Blockchains - 15] 2022.12

(On Legitimacy of Blockchains - 15)

Will spatial consensus algorithms such as PoSt (Proof of Spacetime) or PoC (Proof of Coverage) eventually rise above the impregnable fortress of already popular Web3 solutions such as Bitcoin and Ethereum, and manage to claim their legitimacy in terms of reliability and sustainability?

From a technical point of view, they seem to be reserving a solid ground of reason to support such a conjecture. By integrating the intrinsic limitations of physical entities to the system's means of operation, PoSt and PoC have been quite successful in ensuring the safety of their protocols in a classy, 19th century's natural philosophy type of confidence, not obscured by apparitions of ghostly cryptography which have been poisoning the sanity of our scientific minds ever since computer scientists began to turn themselves into esoteric code-interpreters during World War II.

What is for sure is that physical states of things such as data storage and hotspot coverage are significantly easier to be understood and therefore be appreciated by the general public. Most people (including a significant proportion of those who are fairly well-versed in the field of computer science) are not fond of trusting complex exercises of number theory as means of carrying out their important financial/legal operations; they want a level of conceptual transparency which can be comprehended with relative ease.

This, of course, comes at a cost of installing and maintaining physical apparatus such as a dedicated section of a hard drive for PoSt or a wireless transmitter for PoC, yet it is mostly a negligible nuisance because most home computers and home routers are capable of carrying out such tasks.

A real downside of these physical means of consensus is that they, too, are bound to risks of plutocracy. Just as transactional processes in PoW (Proof of Work) or PoS (Proof of Stake) blockchains can be monopolized by a single disproportionately large pool of computing devices or a large reserve of capital, PoSt and PoC protocols can easily be monopolized by traditional landlords who possess enough chunks of land to either dominate a PoSt network by filling them up with data centers, or dominate a PoC network by filling them up with hotspots.






:d:A thought an a possible alternative means of data storage.
:k:Analog, Analogue, Data, Storage, Geometry, LP, Record

[Analogue Memory Storage] 2022.12

When you download a 3D model from the internet, your computer stores it in the memory module as long lists of numerical values which refer to the coordinates of the model's individual geometric parts.

Such a method of representing a three-dimensional object, however, is not strictly necessary. What if we just let the computer 3D-print a miniature replica of the model and keep it somewhere within its physical space, and then 3D-scan it whenever the model needs to be displayed on the screen?

When a 3D model is supposed to be modified, the only thing the computer will have to do is simply disintegrate its existing replica and then reconstruct the newer version of it at the same exact spot.






:d:An article about blockchains, cryptocurrency, and other distributed financial protocols.
:k:UTXO, UtreeXO, SPV, Bitcoin, Satoshi, Blockchain, Cryptocurrency, Web3, Payment-Channel, Lightning-Network, Layer-2

[On Legitimacy of Blockchains - 16] 2022.12

(On Legitimacy of Blockchains - 16)

No matter which consensus mechanism we choose to use, it seems that a tendency of it to give birth to some kind of monopoly is just as self-evident as a law of nature. PoW (Proof of Work), PoS (Proof of Stake), PoI (Proof of Identity), PoSt (Proof of Spacetime), and other myriads of distributed protocols, regardless of how decentralizd their methods of operation are, all evince their own tendencies to continually accumulate small imbalances in the distribution of authoritative power, which can reasonably be expected to undergo a snowball effect of plunging themselves into a state of eventual centralization. For those who are aware of subtle flaws in the so-called "decentralized future", the promise that Web3 will lead the tomorrow of our financial system summons nothing more or less than an endless stream of doubts.

There is one remaining consensus algorithm, however, which possesses a unique power so witful enough to overcome the force of nature which would otherwise lead us to the peril of anarcho-capitalism. And that is, P2E (Play to Earn) game applications.

Now, I do not necessarily mean any class of P2E games when I mention this particular terminology. There are, without a doubt, countless examples of web games which brand themselves as "P2E" yet fail to showcase anything more than age-old Ponzi schemes, quasi-gambling, and tax evasion. Most of them are examples of nasty attempts to rip off people's wallets by making them reflect upon their fear of missing out the latest trends.

The kind of Play-to-Earn games which I am mentioning here have nothing to do with any of their notorious forms of trickery, such as trying to convince the audience that an unreasonably high price of "owning" a digital asset (e.g. NFT) is fully justified, or trying to sell people a notion that they can instantly turn themselves into millionaires by purchasing a couple of cheesy-looking collectibles in a videogame and fiddling with them in a virtual auction. It is not my intention to promote engagement in any of these groundless activities.

The kind of P2E games which I consider to be legitimate are ones which leverage the very nature of gameplay itself as the core mechanic of consensus in their blockchain framework.






:d:An article about blockchains, cryptocurrency, and other distributed financial protocols.
:k:dApp, Ethereum, ETH, ETC, Rollup, ZK, SNARK, Hash-Function, Pseudorandom, P2E, Blockchain, ASIC, Layer-2

[On Legitimacy of Blockchains - 17] 2022.12

(On Legitimacy of Blockchains - 17)

So far, P2E (Play to Earn) games have not been anything more than an attractive-looking facade devised to promote the usage of the Web3 infrastructure. Such a superficial form of marketing, however, has long been hiding the true potential of gameplay-oriented dApps (Distributed Applications).

Let us imagine a blockchain which bases its logical foundation upon countless interactions between videogame players as well as a virtual space in which they participate in the act of play, all happening inside a collective gameplay ecosystem. And let us venture ourselves into a hypothetical model of consensus in which the game's internal gameplay interactions act as the blockchain's primary means of validating transactions.

In a PoW (Proof of Work) network, agents must rely on the black magic of a cryptographic hash function for growing the chain of transactions and thus have no choice but yield the integrity of the decision-making process to those who have enough computational power to quickly grind through its pseudorandom table of input/output pairs. In a PoS (Proof of Stake) network, agents must yield transactional integrity to those who have the highest percentages of wealth to stake. Other kindred protocols, too, are not entirely free from accusations which claim that they are being "unfair" in terms of giving everybody a fair amount of voice when validating transactions.

A P2E-driven blockchain, on the other hand, is a radically different breed in its own right because its medium of validation is a complex interactive system (aka "game world") that is being shared among every one of its participating players, all collaboratively engaging themselves in the process of creating and amending every mechanical aspect of it.

What I am mentioning here is a perpetual feedback system that can be devised to operate as a self-evolving organic engine of the blockchain. A traditional blockchain framework would have merely established a fixed consensus algorithm and driven itself on top of it, which would have given opportunities for anyone who is insurmountably rich to simply grind one's capital for the purpose of occupying an unfairly enormous share of the network's dictatorial power, either by buying a large number of mining devices (e.g. graphics cards, ASICs) or by simply staking one's disproportionately high wallet balances. A P2E-blockchain is nothing like this; instead of depending its means of consensus on a fixed numerical algorithm, it leverages the dynamics of an ever-growing multiplayer gameplay ecosystem as the method of ensuring the integrity of transactions.







:d:An article about blockchains, cryptocurrency, and other distributed financial protocols.
:k:Blockchain, Game, Ethereum, Crypto, Collectible, SHA256, Bitcoin, Decentralized, Web3, Mining-Pool, Hash-War

[On Legitimacy of Blockchains - 18] 2022.12

(On Legitimacy of Blockchains - 18)

The whole point of leveraging the idea of P2E (Play to Earn) as the primary means of maintaining a state of consensus is to ensure that the blockchain's protocol is so unfathomably complex, that it is virtually impossible for even a highly sophisticated general-purpose AI system to exploit in order to get ahold of unfair advantage.

For ease of conveying the subtle beauty of the technology behind this, please let me explain the concept based on a slightly metaphorical analogy. Suppose that there is a blockchain which is being operated by a unique type of PoW (Proof of Work) consensus mechanism in a sense that it assures the presence of a node's computational work not by the fact that it has found a special input value to a cryptographic hash function (e.g. SHA256) which yields an output value with a special binary pattern, but by the fact that it has discovered a sequence of player inputs inside the game of chess which yields a specific result. Whenever a transaction gets issued, for instance, it can create a round of chess in which one of the virtual players generates a sequence of moves that are pseudo-randomly determined by the transaction's hash code. As soon as the game gets broadcasted throughout the network, miners can competitively try to come up with a sequence of moves of the opponent player which results in the opponent's victory. Anyone who first succeeds in doing so will receive the mining reward.

Now, of course, such a mining rule is easily exploitable by any software that is capable of traversing the game's tree of possibilities and quickly discovering one of its branches that leads to the win-condition. This is because the game of chess is merely a set of logical rules which do not change at all, which means the shape of the game's possibility space will never undergo any modification. It must be fairly easy for a computer, then, to find an optimal path upon the surface of such a static landscape.

Let us now imagine that there is yet another blockchain in which the mining logic operates not on a simple game with a collection of fixed rules (like chess), but on a multiplayer sandbox game in which the rules themselves can be periodically amended as a result of virtual votes being cast by its players. A PoW algorithm which runs upon such a dynamic system must be orders of magnitude more resilient to hackers than a static one because its possibility space is a fluid-like surface whose control points fluctuate at random moments in time due to random actions triggered by its human participants. Even the most advanced machine-learning program cannot decode the nature of such a living galaxy of chaos, governed by countless human souls each of which is a indecipherable body of complexity in its own right.