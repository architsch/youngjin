:d:On the hope of finding a better way to study math.
:k:Math, Mathematics, Math Education, Learning Technique, Study Tips
:l:2024-05-15

[A Layman's Bridge to Mathematics - Preface] May 15, 2024

Math is an important subject. We learn it in order to have a better understanding of the world around us. It is also useful for various applications such as those pertaining to economics, natural sciences, engineering, and many others.

The process of learning math, however, is oftentimes a bit of a pain in one's anatomical bottom. And the main reason why this is so is that the way in which math is being presented to the public is dominated by an enormous heap of dry rules and nitpicky technical details. To be fair, what sort of crackpot would be delighted to spend one's nightly leisure time watching a silent interplay of numbers, points, lines, and Greek letters on a sheet of paper?

A book which deals with mathematical ideas is typically filled up with a truckload of abstract symbols, as well as numerous theorems, examples, and proofs which thoroughly dissect their meanings. Such a comprehensive method of breaking down what is meant to be conveyed to the reader is, without a doubt, the most sincere and effective means of organizing a mathematical treatise.

Such a thorough manner of presentation, though, usually baffles those who are not professional mathematicians and thus do not possess enough patience to follow all the tasteless details. To the reader who is already endowed with the holy spirit of mathematics, those esoteric Greek letters do imply something enjoyable. To the layman, they do not mean anything.

Sadly, many of us often feel the necessity to spend some time studying mathematics for the sake of staying competent in our modern world, which is being governed by economists, business professionals, scientists, and engineers whose expertise heavily depends on the understanding of math. And this tendency seems to amplify itself the more our technology advances.

The problem lies on the fact that, while we do need to learn math, most of its study materials are so painfully unapproachable. And I myself wholeheartedly share this sentiment as well, even though I am an engineer with a 4-year university degree in engineering; it often requires me to load my brain with at least 100mg of caffeine in order to fool it into thinking that an algebraic formula is something interesting to look at.

So, how to fix this horrendous discrepancy between the necessity to learn math and the sheer lack of motivation to do so?

There indeed have been many attempts to deal with this problem, especially among educators, which involved storytelling (as in "Algebra, the Easy Way" by Douglas Downing), interactive visuals, games, and other fascinating experiments in the domain of mixed media.

Yet, for some reason, they do not seem as mainstream as they should be. Core math curriculums in the majority of public schools still heavily focus on teaching a set of formal proofs and problem-solving methodologies, most of which are obsessed rather too much with the technical side of mathematical reasoning than the divine inspiration behind it. As a result, most students get tired of the perennial influx of details before they grasp a chance to find passion in the subject.

In order to alleviate this shared sense of frustration, some educators choose to motivate their students by trying to convince them how useful math is. They tell their students that cool inventions such as airplanes, gaming PCs, Ferris wheels, and ice-pooping refrigerators are all being made by smart people who know all the fancy math and stuff, and that we, too, can do similar cool things by memorizing a bunch of theorems and knowing how to apply them.

Such a type of motivation, however, inadvertently degrades mathematics into some kind of "necessary evil" - a bucket of unappetizing veggies you must force yourself to swallow for the purpose of achieving some distant goal. This confounding gap between the ends and means is what often separates us from the pure joy of thinking mathematically; it is just not as directly rewarding as, say, playing video games.

Many (if not most) of the dedicated mathematicians who study math "just for fun" are not the ones who study it for the sake of utilizing it as a means of something else. They enjoy math as it is, just like many artists take pride in creating art for art's sake and nothing else. It is a "thing in itself", an inexplicable yet quantifiable sort of ghost which is everywhere but is never directly visible.

How to let ourselves grasp such a profound breed of enjoyment without too much hassle, then? A straightforward answer is to keep exposing ourselves to the world of mathematics as much as possible until a tickling moment of enlightenment reveals itself before the face of our subconscious, by means of reading textbooks, solving math problems, following lectures, and so on. This, however, requires us to spend too much time and energy to stay in focus. There must be a better way.

Let us start from common sense. The number one reason why mathematics is uninteresting to most of us is that it looks so detached from our everyday life. Most of us just do not "see" math in things we experience daily, although it really is everywhere from an abstract point of view (In a way, it is the highest form of philosophy - the purest essence of what we can think of and reason with). This is because math is abstract by nature; we can only induce its presence from the collective sum of our experiences.

<001>

The key is to narrow down the gap between our senses and their underlying abstract implications. And since we can only elaborate our own thoughts in terms of what we can directly perceive (because even purely abstract ideas require us to use symbols to express them), we must start with experiences which are familiar to us and then figure out how to let them reveal their own gateways to the beauty of mathematics.

(To be continued)







:d:About the nature of functions and the roles they play in mathematics.
:k:Function, Linear Operator, Linear Transformation, Functional Programming
:l:2024-05-18

[A Layman's Bridge to Mathematics - Part 1] May 18, 2024

First of all, let me suggest that food is our common denominator of interest. There are people who are not interested in sports, religions, politics, and the like, but there is absolutely no one who is not interested in eating at all (If there is one, that dude is dead).

And guess what? Since we like food, we must seek ways of obtaining it. Let's consider a biscuit as an example. One of the most obvious ways of acquiring a biscuit is to bake a piece of dough.

biscuit = bake(dough)

<002>

But in order to do that, we must first have a piece of dough in our hands. Let's make one, then, by mixing flour with water.

dough = mix(flour, water)

<003>

We can obtain flour by grinding wheat.

flour = grind(wheat)

<004>

To summarize, we can generate a biscuit by mixing ground wheat with water and baking it.

biscuit = bake(mix(grind(wheat), water))

<005>

I will explain the notations shown so far. "bake" is a function which takes dough as the input and produces a biscuit as the output, and "mix" is a function which takes flour and water as the input and produces dough as the output. "grind" is a function which takes wheat as the input as produces flour as the output. If you assemble these functions together in the right way, you will get a biscuit.

What is a "function", then? There are many ways of defining it, yet perhaps the most intuitive way is to consider a function as a little machine which has its own entrance and an exit. Through the entrance (aka "input port") it receives the ingredient, and through the exit (aka "output port") it spits out the result of manipulating the ingredient.

<006>

Whenever you choose to gather a multitude of such machines and compose them in order to produce the result you desire, you are building a factory where the individual workers collaborate with one another in a streamlined manner. The output of one worker could be handed over to another worker as the input, or multiple workers could be grabbing the same input and working on it concurrently so as to double the speed of production, and so on. There are so many possibilities here, and they can all be realized by joining functions with each other in creative ways. It all boils down to a network of input-output relations.

There is yet another way of defining what a function is, though. If you contemplate upon the meaning of a function in terms of what it does, you will soon come to the conclusion that a function is, on a purely conceptual level, just a bunch of connections between all of its possible inputs and their corresponding outputs.

<007>

Each connection (represented by an arrow) tells us which input values translate into which output values. For instance, the "bake" function can be identified as a set of connections between raw materials and their baked results.

<008>

What about a function which takes a pair of ingredients as the input instead of just a single ingredient? The "mix" function is a typical example of this; it "mixes" the two given ingredients and produces a mixture between the two as the output. In this case, we can consider each connection as one which maps a pair of input elements (instead of just a singular input) into their corresponding output.

<009>

This kind of representation is fine, for the purpose of providing us with a means of understanding what a function does. There is something quite annoying in this approach, however. As you may have noticed already, it is way too cumbersome to describe a function by mentioning every one of its input-output relations. For a very simple function it might be manageable, but for a fairly complex function it is prohibitively laborious.

What do we do, then? If taking all possible input-output relations into account proves itself to be too difficult, the other solution we ought to follow is to specify the general pattern in which inputs are being associated with their respective outputs. And in order to do that, we must establish a way to somehow "align" all the inputs (as well as outputs) in the form of an ordered sequence. This will give them a structure to fit in, thereby enabling us to render their behavior in terms of a generally applicable rule rather than an enormous collection of case-by-case scenarios.

<010>

Here, we are grouping all the possible inputs as an ordered sequence (represented by a long vertical arrow). Also, we are grouping all the possible outputs as yet another ordered sequence. The reason why we are doing this is to keep things organized.

As we ponder upon the very nature of what the so-called "inputs" and "outputs" really are, we quickly come to the realization that there is not really an intrinsic difference between things that are labeled as "inputs" and things that are labeled as "outputs"; an output of a function can also be an input of another function, and vice versa. Inputs and outputs are both "things" which, in the most unbiased mode of representation, can best be depicted as a set of points in empty space.

<011>

Oh, but here is where the trouble comes! Since there are so many things in our world to keep track of, we cannot just randomly plot them on a gigantic sheet of paper and try to make sense of them; such an undisciplined approach will make everything extremely confusing. What do we do, then? For sanity's sake, we organize them in some way or another. And one the most straightforward ways of organizing a bunch of things is to group them into categories.

<012>

For example, a variety of sandwiches, such as "chicken sandwich", "tuna sandwich", "meatball sandwich", "BLT sandwich", "PB&J sandwich", and the like, can all be grouped into the same category called "sandwich". The same logic applies to different breeds of a biological specie, different chemical elements in the periodic table, and so forth.

This sort of classification is still not enough, though. A category may turn out to be too broad in scope, that there are still way too many unorganized things lurking inside each category. This impels us to keep introducing new categories within our existing categories, thus giving birth to a taxonomical hierarchy.

<013>

As we do this, however, we begin to complicate things rather too much. It is usually not so high a virtue to have Russian dolls in one's faculty of reasoning, and it is important for one to admit that a more sustainable method of keeping things under control is to order them in the form of a sequence.

<014>

The long arrow shown here is a sequence, which bears a direction as well as the sense of alignment. Elements of this sequence either come before or after one another, depending on which of them are closer to the head of the arrow than others, etc. And the most quintessential advantage of doing it this way is that it lets us refer to things with numbers instead of arbitrary names.

<015>

Numbers reflect the concept of order very accurately. 1 comes after 0, 2 comes after 1, and 3 comes after 2. By comparing numerical values, we can immediately tell ourselves whether a thing comes before or after another thing. And as we figure out the order of things, we acquire a key to unlock the secret of parallelism. Here is an example:

<016>

We are looking at a function which is characterized by the equation: "output = input + 1". It means that the output of this function is always the result of incrementing the input by 1. We do not have to list all possible inputs and their corresponding outputs to fully define what the function does, since the equation alone reveals all the clues we need to derive the output from any given input.

The reason why such an abbreviation is feasible is that this function only deals with numerical entities (i.e. things which make up a sequence when they are put together). Since the input is a string of ordered things and the output is also a string of ordered things, we can consider the function as some kind of "string manipulator" - a special gadget which absorbs a string, distorts it (using mechanical instructions such as: "Cut it!", "Stretch it!", "Shrink it!", etc), and emits the result.

If the input were a mere assortment of random objects (like a bottle of jelly beans), it would have been extremely difficult to figure out what to do with them exactly. As we tie them up on a rope and treat the whole body as a single entity, we begin to let ourselves move all these individual pieces at once by simply pulling the rope. In mathematics, such a rope is called a "number line".

Aside from the ease of operation, the aforementioned mode of thinking also lets us plot the function's input-output relations in the form of a graph, like the one shown below:

<017>

Such is the power of expressing things in terms of numbers, hence the reason why they are so commonly used in mathematics. But of course, numbers themselves do not mean anything unless we specify the context in which they are being used. If I just say "Three!", it will hardly mean anything. If I say that I have three eggs, on the other hand, it will definitely mean something which can be pictured in the listener's mind.

(Will be continued in Part 2)







:d:About the meaning of numbers and how the idea of dimension gives them unique semantics.
:k:Number Theory, Dimension, Numerical Analysis, Linear Mapping, Quantitative Operators
:l:2024-05-21

[A Layman's Bridge to Mathematics - Part 2] May 21, 2024

(Continued from Part 1)

A number itself does not mean anything. A number which indicates a quantity of something we can see, hear, smell, or touch, on the other hand, does mean something.

In the previous chapter, I mentioned that a function is a machine which receives a thing called "input" and emits another thing called "output". A function does not necessarily receive everything we can possibly imagine, though; it is usually expected to accept only a certain category of things as inputs, and emit only a certain category of things as outputs.

It has also been noted that, for the purpose of simplicity, it is sensible to group things of interest in the form of an ordered sequence. This enables us to refer to them with numbers instead of arbitrary names.

The "bake" function is a machine which converts a piece of dough (input) into a biscuit (output). However, we are also aware that there are different types of dough from which a whole variety of baked products can arise, such as cookie dough, shortbread dough, scone dough, and so on. The "bake" function must take all these possibilities into account, since the word "bake" does not confine itself to the process of baking nothing but a tasteless hardtack.

<018>

And it is this moment at which we begin to realize the necessity of using numbers to represent our inputs and outputs. Individual terminologies such as "dough", "cookie dough", and the like, are not so easy to deal with because there is no fixed criterion under which they can be compared with each other in a consistent manner. The best we can do in such a circumstance is to merely list all possible scenarios.

Once we assign numerical values to the terms and line them up as a sequence, things start to become much more handy. Since they are quantities instead of just a bunch of qualitative indicators, we can now fully illustrate their input-output relations based upon a simple quantitative rule.

For example, suppose that different types of dough are denoted by single-digit numbers such as 0, 1, and 2, and that their baked results are denoted by double-digit numbers such as 10, 11, and 12, like the ones shown below.

<019>

We are assuming here that both the inputs and outputs of the "bake" function are numerical values. The benefit of doing this is that now we are able to use an algebraic pattern to describe what the function does.

<020>

We know that baking a piece of dough gives us a biscuit, baking a piece of cookie dough gives us a cookie, baking a piece of scone dough gives us a scone, and baking a piece of shortbread dough gives us a shortbread. According to the given set of equivalences, it is also perfectly valid to say that baking 0 gives us 10, baking 1 gives us 11, baking 2 gives us 12, and baking 3 gives us 13. Do you see the pattern here? It means that baking something is the same as increasing its value by 10.

<021>

Now we have it. "output = input + 10" is the only formula we need to be able to derive the output of the "bake" function from any given input. This is the power of representing things numerically; since quantitative operators such as addition (+), subtraction (-), multiplication (x), and division (/) are endowed with the abilty to easily summarize the way in which one set of things can be mapped into with another set of things.

One major concern which may arise here, though, is that utilizing numbers in the context of baking is perhaps a bit too "hacky". As you may have noticed already, attaching arbitrary numbers to a bunch of seemingly unrelated objects such as "dough", "cookie", "shortbread", and so on, feels way too random when we think about it. Why should "cookie" always be identified by number 11? Why can't it be 42, 990, -83794, or 51.230774 instead?

This is probably one of the main reasons why so many people hate mathematics. Numbers, when their roles are not explained thoroughly enough, present themselves as nothing more than a library of obscure symbols. And what is unfortunate is that the origin of such evil can be attributed to hardcore mathematicians who are obsessed with brevity; their love for ultra-minimalism encourages them to oversimplify everything, including the very reason why we decided to use numbers in the first place (I mean, yes, mathematicians do indeed explain why they are using certain variables, symbols, and so forth, but such explanations are mostly concealed inside their bush of technical eloquence).

<022>

What we need is a down-to-earth illustration of what is going on, as well as why we need numbers for it. Once we are settled on that, we can then proceed to set up an agreeable standard as to the meaning of those numbers.

The biggest challenge is to establish an intuitively satisfying correlation between our practical interests and the way in which they are being represented. When we bake something, what we want to know is the type of the thing that we are baking, as well as the type of the thing that will result once baking is over. It is because we do not want to be ignorant of what we are putting into the oven and what we are getting out of it. We have an inherent desire to identify things we care, by means of names, numbers, or other identifiers.

And it is the heart of mathematical reasoning which guides us to the belief that numbers are the most preferred ones among such identifiers, due to the fact that their pre-established set of relations allow them to be mutually comparable. We cannot directly compare a biscuit with a cookie, but we can definitely compare the sweetness of a biscuit with the sweetness of a cookie because "sweetness" is something which can be characterized by a number (e.g. A small number refers to low sweetness, a large number refers to high sweetness, etc).

<023>

But then, of course, comparing sweetness is not the only option we have. We are also able to compare the size, weight, or color of the two desserts by means of numerical quantifiers. And it is necessary to realize that the same exact number (such as "3") can either mean sweetness, size, or weight, depending on what it is aiming to convey.

The problem is that it is not so easy to represent everything with just a single line of numbers. We need a multitude of them, each of which represents a separate dimension.

<024>

A dimension is a group of similar things which can be lined up as a sequence. The sweetness of a biscuit and the sweetness of a cookie are "similar" in the sense that they both belong to the same property called "sweetness", as well as that one of them either comes before or after the other in the spectrum of sweetness depending on what their values are. Therefore, they both belong to the same dimension which can be named "sweetness".

So now we have it. We are free to come up with any arbitrary dimensions, each of which corresponds to a category of things that are numerically comparable with one another.

We have an intuitive understanding that the "bake" function accepts a bakeable item as the input and returns a baked item as the output. What should be noted here is that there is a clear distinction between things that are eligible to be the input and things that are eligible to be the output; only those which are considered "bakeable" can possibly be the input of the function, and only those which are considered "baked" can possibly be the output of the function.

<025>

But again, we do not want to undertake the pain of having to specify every possible way in which a member of one group can be associated with a member of the other group. This can be avoided by introducing dimensions.

<026>

Here we have a dimension of bakeable objects, as well as a dimension of baked objects. Numbers in the bakeable-dimension are things which can be baked, and numbers in the baked-dimension are things which are the results of being baked.

Unfortunately, we are once again confronting the issue of semantics here. One can technically illustrate the aforementioned dimensions by saying, "10 is for biscuit! 11 is for cookie! 12 is for scone!" and so on, but such statements feel like they are out of nowhere. Hence, what does it imply when we compare one thing with another in this context? For example, if 11 denotes a cookie and 10 denotes a biscuit, does the fact that a cookie is 1 greater than a biscuit mean anything?

There would have not been such a problem of ambiguity if the dimensions referred to measurable quantities. So, let's rethink the nature of the "bake" function in terms of what can be measured.

Whenever we bake something, we are increasing the temperature of whatever is in the oven. So it seems that the input and output of the "bake" function could represent the initial and final temperatures of the oven's content, respectively. We can imagine that these two numbers both belong to the same dimension called "temperature".

<027>

This looks fair enough, yet we know that such a formulation does not render the full picture of what is really happening. The art of baking is not just about changing the temperature of the dough! There are so many other physicochemical processes going on inside the oven, besides the addition of thermal energy. It will be insincere for us to blatantly ignore these intricate details just for the sake of simplicity.

(Will be continued in Part 3)